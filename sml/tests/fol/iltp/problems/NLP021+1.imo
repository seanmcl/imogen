% File     : NLP021+1 : ILTP v1.1.2
% Domain   : Natural Language Processing
% Problem  : "The old dirty white Chevy" problem 21
% Version  : [Bos00] axioms.
% English  : A problem generated by the DORIS [Bos00] system when parsing
%            the statement "The old dirty white Chevy barrels down a lonely
%            street in Hollywood".
% Refs     : [Bos00] Bos (2000), DORIS: Discourse Oriented Representation an
%            [Bau99] Baumgartner (1999), FTP'2000 - Problem Sets
% Source   : [Bau99]
% Names    : 
% Status   : CounterSatisfiable
% Rating   : 0.00 v3.1.0, 0.17 v2.6.0, 0.00 v2.4.0
%
% Status (intuit.) : Unsolved
% Rating (intuit.) : 1.00 v1.1.0
%
% Syntax   : Number of formulae    :   43 (   0 unit)
%            Number of atoms       :  119 (   4 equality)
%            Maximal formula depth :   37 (   4 average)
%            Number of connectives :   87 (  11 ~  ;   0  |;  33  &)
%                                         (   2 <=>;  41 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :   43 (   0 propositional; 1-3 arity)
%            Number of functors    :    0 (   0 constant; --- arity)
%            Number of variables   :   61 (   0 singleton;  60 !;   1 ?)
%            Maximal term depth    :    1 (   1 average)
% Comments : 
%------------------------------------------------------------------------------

 

% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% abstraction_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & abstraction(A) ) => abstraction(B) ) ))

  =>

% artifact_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & artifact(A) ) => artifact(B) ) ))

  =>

% barrel_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & barrel(A, C) ) => barrel(B, C) ) ))

  =>

% barrel_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & barrel(C, A) ) => barrel(C, B) ) ))

  =>

% car_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & car(A) ) => car(B) ) ))

  =>

% chevy_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & chevy(A) ) => chevy(B) ) ))

  =>

% city_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & city(A) ) => city(B) ) ))

  =>

% dirty_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & dirty(A) ) => dirty(B) ) ))

  =>

% down_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & down(A, C) ) => down(B, C) ) ))

  =>

% down_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & down(C, A) ) => down(C, B) ) ))

  =>

% drs_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & drs(A) ) => drs(B) ) ))

  =>

% entity_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & entity(A) ) => entity(B) ) ))

  =>

% event_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & event(A) ) => event(B) ) ))

  =>

% eventuality_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & eventuality(A) ) => eventuality(B) ) ))

  =>

% fellow_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & fellow(A) ) => fellow(B) ) ))

  =>

% female_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & female(A) ) => female(B) ) ))

  =>

% front_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & front(A) ) => front(B) ) ))

  =>

% furniture_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & furniture(A) ) => furniture(B) ) ))

  =>

% have_substitution_1, axiom.
(( forall A B C D. ( ( ( A = B ) & have(A, C, D) ) => have(B, C, D) ) ))

  =>

% have_substitution_2, axiom.
(( forall A B C D. ( ( ( A = B ) & have(C, A, D) ) => have(C, B, D) ) ))

  =>

% have_substitution_3, axiom.
(( forall A B C D. ( ( ( A = B ) & have(C, D, A) ) => have(C, D, B) ) ))

  =>

% hollywood_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & hollywood(A) ) => hollywood(B) ) ))

  =>

% human_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & human(A) ) => human(B) ) ))

  =>

% in_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & in(A, C) ) => in(B, C) ) ))

  =>

% in_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & in(C, A) ) => in(C, B) ) ))

  =>

% instrumentality_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & instrumentality(A) ) => instrumentality(B) ) ))

  =>

% location_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & location(A) ) => location(B) ) ))

  =>

% lonely_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & lonely(A) ) => lonely(B) ) ))

  =>

% male_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & male(A) ) => male(B) ) ))

  =>

% man_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & man(A) ) => man(B) ) ))

  =>

% new_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & new(A) ) => new(B) ) ))

  =>

% nonhuman_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & nonhuman(A) ) => nonhuman(B) ) ))

  =>

% object_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & object(A) ) => object(B) ) ))

  =>

% of_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & of(A, C) ) => of(B, C) ) ))

  =>

% of_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & of(C, A) ) => of(C, B) ) ))

  =>

% old_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & old(A) ) => old(B) ) ))

  =>

% organism_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & organism(A) ) => organism(B) ) ))

  =>

% owner_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & owner(A) ) => owner(B) ) ))

  =>

% partof_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & partof(A, C) ) => partof(B, C) ) ))

  =>

% partof_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & partof(C, A) ) => partof(C, B) ) ))

  =>

% proposition_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & proposition(A) ) => proposition(B) ) ))

  =>

% seat_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & seat(A) ) => seat(B) ) ))

  =>

% street_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & street(A) ) => street(B) ) ))

  =>

% transport_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & transport(A) ) => transport(B) ) ))

  =>

% vehicle_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & vehicle(A) ) => vehicle(B) ) ))

  =>

% way_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & way(A) ) => way(B) ) ))

  =>

% white_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & white(A) ) => white(B) ) ))

  =>

% woman_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & woman(A) ) => woman(B) ) ))

  =>

% young_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & young(A) ) => young(B) ) ))

  =>

% ax1, axiom.
(( forall U. ( fellow(U) => man(U) ) ))

  =>

% ax2, axiom.
(( forall U. ( man(U) => human(U) ) ))

  =>

% ax3, axiom.
(( forall U. ( human(U) => organism(U) ) ))

  =>

% ax4, axiom.
(( forall U. ( organism(U) => entity(U) ) ))

  =>

% ax5, axiom.
(( forall U. ( organism(U) => ( ~ object(U) ) ) ))

  =>

% ax6, axiom.
(( forall U. ( front(U) => nonhuman(U) ) ))

  =>

% ax7, axiom.
(( forall U. ( seat(U) => furniture(U) ) ))

  =>

% ax8, axiom.
(( forall U. ( furniture(U) => instrumentality(U) ) ))

  =>

% ax9, axiom.
(( forall U. ( furniture(U) => ( ~ transport(U) ) ) ))

  =>

% ax10, axiom.
(( forall U. ( street(U) => way(U) ) ))

  =>

% ax11, axiom.
(( forall U. ( way(U) => artifact(U) ) ))

  =>

% ax12, axiom.
(( forall U. ( way(U) => ( ~ instrumentality(U) ) ) ))

  =>

% ax13, axiom.
(( forall U. ( chevy(U) => car(U) ) ))

  =>

% ax14, axiom.
(( forall U. ( car(U) => vehicle(U) ) ))

  =>

% ax15, axiom.
(( forall U. ( vehicle(U) => transport(U) ) ))

  =>

% ax16, axiom.
(( forall U. ( transport(U) => instrumentality(U) ) ))

  =>

% ax17, axiom.
(( forall U. ( instrumentality(U) => artifact(U) ) ))

  =>

% ax18, axiom.
(( forall U. ( artifact(U) => object(U) ) ))

  =>

% ax19, axiom.
(( forall U. ( artifact(U) => ( ~ location(U) ) ) ))

  =>

% ax20, axiom.
(( forall U. ( event(U) => eventuality(U) ) ))

  =>

% ax21, axiom.
(( forall U. ( hollywood(U) => city(U) ) ))

  =>

% ax22, axiom.
(( forall U. ( city(U) => location(U) ) ))

  =>

% ax23, axiom.
(( forall U. ( location(U) => object(U) ) ))

  =>

% ax24, axiom.
(( forall U. ( object(U) => entity(U) ) ))

  =>

% ax25, axiom.
(( forall U. ( old(U) => ( ~ new(U) ) ) ))

  =>

% ax26, axiom.
(( forall U. ( eventuality(U) => ( ~ entity(U) ) ) ))

  =>

% ax27, axiom.
(( forall U. ( abstraction(U) => ( ~ entity(U) ) ) ))

  =>

% ax28, axiom.
(( forall U. ( abstraction(U) => ( ~ eventuality(U) ) ) ))

  =>

% ax29, axiom.
(( forall U. ( male(U) => ( ~ female(U) ) ) ))

  =>

% ax30, axiom.
(( forall U. ( man(U) => ( ~ woman(U) ) ) ))

  =>

% ax31, axiom.
(( forall U. ( man(U) => male(U) ) ))

  =>

% ax32, axiom.
(( forall U. ( male(U) => human(U) ) ))

  =>

% ax33, axiom.
(( forall U. ( female(U) => human(U) ) ))

  =>

% ax34, axiom.
(( forall U. ( woman(U) => female(U) ) ))

  =>

% ax35, axiom.
(( forall U. ( drs(U) <=> proposition(U) ) ))

  =>

% ax36, axiom.
(( forall U. ( nonhuman(U) => entity(U) ) ))

  =>

% ax37, axiom.
(( forall U. ( human(U) => ( ~ nonhuman(U) ) ) ))

  =>

% ax38, axiom.
(( forall U V W. ( ( have(U, V, W) & human(V) ) <=> ( owner(V) & of(V, W) ) ) ))

  =>

% ax39, axiom.
(( forall U V W. ( ( have(U, V, W) & ( nonhuman(V) & nonhuman(W) ) ) => partof(W, V) ) ))

  =>

% ax40, axiom.
(( forall U V W. ( ( event(U) & have(U, V, W) ) => of(V, W) ) ))

  =>

% ax41, axiom.
(( forall U V. ( of(V, U) => ( exists W. ( event(W) & have(W, U, V) ) ) ) ))

  =>

% ax42, axiom.
(( forall U V W. ( ( partof(U, V) & partof(U, W) ) => ( V = W ) ) ))

  =>

% co1, conjecture.
(( forall U V W X Y Z X1 X3 X4. ( ( seat(U) & ( furniture(U) & ( front(U) & ( hollywood(V) & ( city(V) & ( event(W) & ( street(X) & ( way(X) & ( lonely(X) & ( chevy(Y) & ( car(Y) & ( white(Y) & ( dirty(Y) & ( old(Y) & ( barrel(W, Y) & ( down(W, X) & ( in(W, V) & ( fellow(Z) & ( man(Z) & ( young(Z) & ( fellow(X1) & ( man(X1) & ( young(X1) & ( ( Z = X3 ) & ( in(X3, U) & ( ( X1 = X4 ) & in(X4, U) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) => ( Z = X1 ) ) ))

 

%------------------------------------------------------------------------------
