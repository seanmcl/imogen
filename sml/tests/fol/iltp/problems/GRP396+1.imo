% File     : GRP396+1 : ILTP v1.1.2
% Domain   : Group Theory (Named Semigroups)
% Problem  : Group theory (Named Semigroups) axioms
% Version  : [Gol93] axioms.
% English  : 
% Refs     : [Gol93] Goller (1993), Anwendung des Theorembeweisers SETHEO a
% Source   : [Gol93]
% Names    : 
% Status   : Satisfiable
% Rating   : 0.33 v2.7.0, 0.67 v2.5.0
%
% Status (intuit.) : Non-Theorem (Problem negated)
% Rating (intuit.) : 0.75 v1.1.0
%
% Syntax   : Number of formulae    :    2 (   0 unit)
%            Number of atoms       :    7 (   1 equality)
%            Maximal formula depth :    8 (   7 average)
%            Number of connectives :    5 (   0 ~  ;   0  |;   3  &)
%                                         (   0 <=>;   2 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :    2 (   0 propositional; 2-2 arity)
%            Number of functors    :    1 (   0 constant; 3-3 arity)
%            Number of variables   :    7 (   0 singleton;   7 !;   0 ?)
%            Maximal term depth    :    3 (   1 average)
% Comments : 
%------------------------------------------------------------------------------

 

Â¬ (
% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% multiply_substitution_1, axiom.
(( forall A B C D. ( ( A = B ) => ( multiply(A, C, D) = multiply(B, C, D) ) ) ))

  =>

% multiply_substitution_2, axiom.
(( forall A B C D. ( ( A = B ) => ( multiply(C, A, D) = multiply(C, B, D) ) ) ))

  =>

% multiply_substitution_3, axiom.
(( forall A B C D. ( ( A = B ) => ( multiply(C, D, A) = multiply(C, D, B) ) ) ))

  =>

% group_member_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & group_member(A, C) ) => group_member(B, C) ) ))

  =>

% group_member_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & group_member(C, A) ) => group_member(C, B) ) ))

  =>

% total_function, axiom.
(( forall G X Y. ( ( group_member(X, G) & group_member(Y, G) ) => group_member(multiply(G, X, Y), G) ) ))

  =>

% associativity, axiom.
(( forall G X Y Z. ( ( group_member(X, G) & ( group_member(Y, G) & group_member(Z, G) ) ) => ( multiply(G, multiply(G, X, Y), Z) = multiply(G, X, multiply(G, Y, Z)) ) ) ))

)
 

%------------------------------------------------------------------------------
