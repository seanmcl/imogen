% File     : NLP013+1 : ILTP v1.1.2
% Domain   : Natural Language Processing
% Problem  : "The old dirty white Chevy" problem 13
% Version  : [Bos00] axioms.
% English  : A problem generated by the DORIS [Bos00] system when parsing
%            the statement "The old dirty white Chevy barrels down a lonely
%            street in Hollywood".
% Refs     : [Bos00] Bos (2000), DORIS: Discourse Oriented Representation an
%            [Bau99] Baumgartner (1999), FTP'2000 - Problem Sets
% Source   : [Bau99]
% Names    : 
% Status   : CounterSatisfiable
% Rating   : 0.00 v3.1.0, 0.67 v2.6.0, 0.25 v2.5.0, 0.33 v2.4.0
%
% Status (intuit.) : Unsolved
% Rating (intuit.) : 1.00 v1.1.0
%
% Syntax   : Number of formulae    :    1 (   0 unit)
%            Number of atoms       :  118 (  12 equality)
%            Maximal formula depth :   43 (  43 average)
%            Number of connectives :  121 (   4 ~  ;   0  |; 115  &)
%                                         (   0 <=>;   2 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :   21 (   0 propositional; 1-2 arity)
%            Number of functors    :    0 (   0 constant; --- arity)
%            Number of variables   :   38 (   0 singleton;   0 !;  38 ?)
%            Maximal term depth    :    1 (   1 average)
% Comments : 
%------------------------------------------------------------------------------

 

% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% barrel_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & barrel(A, C) ) => barrel(B, C) ) ))

  =>

% barrel_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & barrel(C, A) ) => barrel(C, B) ) ))

  =>

% car_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & car(A) ) => car(B) ) ))

  =>

% chevy_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & chevy(A) ) => chevy(B) ) ))

  =>

% city_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & city(A) ) => city(B) ) ))

  =>

% dirty_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & dirty(A) ) => dirty(B) ) ))

  =>

% down_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & down(A, C) ) => down(B, C) ) ))

  =>

% down_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & down(C, A) ) => down(C, B) ) ))

  =>

% event_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & event(A) ) => event(B) ) ))

  =>

% fellow_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & fellow(A) ) => fellow(B) ) ))

  =>

% front_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & front(A) ) => front(B) ) ))

  =>

% furniture_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & furniture(A) ) => furniture(B) ) ))

  =>

% hollywood_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & hollywood(A) ) => hollywood(B) ) ))

  =>

% in_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & in(A, C) ) => in(B, C) ) ))

  =>

% in_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & in(C, A) ) => in(C, B) ) ))

  =>

% lonely_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & lonely(A) ) => lonely(B) ) ))

  =>

% man_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & man(A) ) => man(B) ) ))

  =>

% old_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & old(A) ) => old(B) ) ))

  =>

% seat_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & seat(A) ) => seat(B) ) ))

  =>

% street_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & street(A) ) => street(B) ) ))

  =>

% way_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & way(A) ) => way(B) ) ))

  =>

% white_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & white(A) ) => white(B) ) ))

  =>

% young_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & young(A) ) => young(B) ) ))

  =>

% co1, conjecture.
(( ( ( exists U V W X Y Z X1 X2 X3. ( hollywood(U) & ( city(U) & ( event(V) & ( chevy(W) & ( car(W) & ( white(W) & ( dirty(W) & ( old(W) & ( street(X) & ( way(X) & ( lonely(X) & ( barrel(V, W) & ( down(V, X) & ( in(V, U) & ( seat(X1) & ( furniture(X1) & ( front(X1) & ( ( ~ ( Y = Z ) ) & ( fellow(Y) & ( man(Y) & ( young(Y) & ( fellow(Z) & ( man(Z) & ( young(Z) & ( ( Y = X2 ) & ( in(X2, X1) & ( ( Z = X3 ) & in(X3, X1) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) => ( exists X4 X5 X6 X7 X8 X9 X10 X11 X12 X13. ( seat(X4) & ( furniture(X4) & ( front(X4) & ( hollywood(X5) & ( city(X5) & ( event(X6) & ( street(X7) & ( way(X7) & ( lonely(X7) & ( chevy(X8) & ( car(X8) & ( white(X8) & ( dirty(X8) & ( old(X8) & ( barrel(X6, X8) & ( down(X6, X7) & ( in(X6, X5) & ( seat(X11) & ( furniture(X11) & ( front(X11) & ( ( ~ ( X9 = X10 ) ) & ( fellow(X9) & ( man(X9) & ( young(X9) & ( fellow(X10) & ( man(X10) & ( young(X10) & ( ( X9 = X12 ) & ( in(X12, X11) & ( ( X10 = X13 ) & in(X13, X4) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) & ( ( exists X14 X15 X16 X17 X18 X19 X20 X21 X22 X23. ( seat(X14) & ( furniture(X14) & ( front(X14) & ( hollywood(X15) & ( city(X15) & ( event(X16) & ( street(X17) & ( way(X17) & ( lonely(X17) & ( chevy(X18) & ( car(X18) & ( white(X18) & ( dirty(X18) & ( old(X18) & ( barrel(X16, X18) & ( down(X16, X17) & ( in(X16, X15) & ( seat(X21) & ( furniture(X21) & ( front(X21) & ( ( ~ ( X19 = X20 ) ) & ( fellow(X19) & ( man(X19) & ( young(X19) & ( fellow(X20) & ( man(X20) & ( young(X20) & ( ( X19 = X22 ) & ( in(X22, X21) & ( ( X20 = X23 ) & in(X23, X14) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) => ( exists X24 X25 X26 X27 X28 X29 X30 X31 X32. ( hollywood(X24) & ( city(X24) & ( event(X25) & ( chevy(X26) & ( car(X26) & ( white(X26) & ( dirty(X26) & ( old(X26) & ( street(X27) & ( way(X27) & ( lonely(X27) & ( barrel(X25, X26) & ( down(X25, X27) & ( in(X25, X24) & ( seat(X30) & ( furniture(X30) & ( front(X30) & ( ( ~ ( X28 = X29 ) ) & ( fellow(X28) & ( man(X28) & ( young(X28) & ( fellow(X29) & ( man(X29) & ( young(X29) & ( ( X28 = X31 ) & ( in(X31, X30) & ( ( X29 = X32 ) & in(X32, X30) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ))

 

%------------------------------------------------------------------------------
