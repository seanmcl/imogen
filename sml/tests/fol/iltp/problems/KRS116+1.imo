% File     : KRS116+1 : ILTP v1.1.2
% Domain   : Knowledge Representation (Semantic Web)
% Problem  : DL Test: t4.1 Dynamic blocking example
% Version  : Especial.
% English  : 
% Refs     : [Bec03] Bechhofer (2003), Email to G. Sutcliffe
%          : [TR+04] Tsarkov et al. (2004), Using Vampire to Reason with OW
% Source   : [Bec03]
% Names    : inconsistent_description-logic-Manifest623 [Bec03]
% Status   : Unsatisfiable
% Rating   : 0.00 v3.1.0
%
% Status (intuit.) : Open (Problem negated)
% Rating (intuit.) : 1.00 v1.1.0
%
% Syntax   : Number of formulae    :   18 (   1 unit)
%            Number of atoms       :   54 (   0 equality)
%            Maximal formula depth :   10 (   5 average)
%            Number of connectives :   39 (   3 ~  ;   0  |;  12  &)
%                                         (  13 <=>;  11 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :   21 (   0 propositional; 1-2 arity)
%            Number of functors    :    1 (   1 constant; 0-0 arity)
%            Number of variables   :   37 (   0 singleton;  30 !;   7 ?)
%            Maximal term depth    :    1 (   1 average)
% Comments : Sean Bechhofer says there are some errors in the encoding of
%            datatypes, so this problem may not be perfect. At least it's
%            still representative of the type of reasoning required for OWL.
%------------------------------------------------------------------------------

 

Â¬ (
% axiom_0, axiom.
(( forall X. ( cowlThing(X) & ( ~ cowlNothing(X) ) ) ))

  =>

% axiom_1, axiom.
(( forall X. ( xsd_string(X) <=> ( ~ xsd_integer(X) ) ) ))

  =>

% axiom_2, axiom.
(( forall X. ( cUnsatisfiable(X) => ca(X) ) ))

  =>

% axiom_3, axiom.
(( forall X. ( cUnsatisfiable(X) => ( exists Y. ( rs(X, Y) & ca_Ax2(Y) ) ) ) ))

  =>

% axiom_4, axiom.
(( forall X. ( ca(X) <=> ( ~ ( exists Y. ra_Px1(X, Y) ) ) ) ))

  =>

% axiom_5, axiom.
(( forall X. ( caxcomp(X) <=> ( exists Y0. ra_Px1(X, Y0) ) ) ))

  =>

% axiom_6, axiom.
(( forall X. ( cc(X) <=> ( forall Y. ( rinvR(X, Y) => ca_Vx7(Y) ) ) ) ))

  =>

% axiom_7, axiom.
(( forall X. ( ca_Ax2(X) <=> ( ( forall Y. ( rp(X, Y) => ca_Vx3(Y) ) ) & ( ( forall Y. ( rp(X, Y) => ca_Vx5(Y) ) ) & ( ( forall Y. ( rr(X, Y) => cc(Y) ) ) & ( ( exists Y. ( rr(X, Y) & cowlThing(Y) ) ) & ( ( exists Y. ( rp(X, Y) & cowlThing(Y) ) ) & ( forall Y. ( rp(X, Y) => ca_Vx4(Y) ) ) ) ) ) ) ) ) ))

  =>

% axiom_8, axiom.
(( forall X. ( ca_Vx3(X) <=> ( exists Y. ( rr(X, Y) & cowlThing(Y) ) ) ) ))

  =>

% axiom_9, axiom.
(( forall X. ( ca_Vx4(X) <=> ( exists Y. ( rp(X, Y) & cowlThing(Y) ) ) ) ))

  =>

% axiom_10, axiom.
(( forall X. ( ca_Vx5(X) <=> ( forall Y. ( rr(X, Y) => cc(Y) ) ) ) ))

  =>

% axiom_11, axiom.
(( forall X. ( ca_Vx6(X) <=> ( forall Y. ( rinvS(X, Y) => caxcomp(Y) ) ) ) ))

  =>

% axiom_12, axiom.
(( forall X. ( ca_Vx7(X) <=> ( forall Y. ( rinvP(X, Y) => ca_Vx6(Y) ) ) ) ))

  =>

% axiom_13, axiom.
(( forall X Y. ( rinvP(X, Y) <=> rp(Y, X) ) ))

  =>

% axiom_14, axiom.
(( forall X Y. ( rinvR(X, Y) <=> rr(Y, X) ) ))

  =>

% axiom_15, axiom.
(( forall X Y. ( rinvS(X, Y) <=> rs(Y, X) ) ))

  =>

% axiom_16, axiom.
(( forall X Y Z. ( ( rp(X, Y) & rp(Y, Z) ) => rp(X, Z) ) ))

  =>

% axiom_17, axiom.
(cUnsatisfiable(i2003_11_14_17_21_33997))

)
 

%------------------------------------------------------------------------------
