% File     : ALG022+1 : ILTP v1.1.2
% Domain   : General Algebra
% Problem  : Groups 4: REPRESENTATIVES-SATISFY-PROPS-PROBLEM-2
% Version  : Especial.
% English  : 
% Refs     : [Mei03] Meier (2003), Email to G.Sutcliffe
%          : [CM+04] Colton et al. (2004), Automatic Generation of Classifi
% Source   : [Mei03]
% Names    : 
% Status   : Theorem
% Rating   : 0.67 v3.1.0, 0.78 v2.7.0
%
% Status (intuit.) : Open
% Rating (intuit.) : 1.00 v1.0.0
%
% Syntax   : Number of formulae    :    5 (   1 unit)
%            Number of atoms       :  207 ( 207 equality)
%            Maximal formula depth :  105 (  27 average)
%            Number of connectives :  209 (   7 ~  ;  66  |; 136  &)
%                                         (   0 <=>;   0 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :    1 (   0 propositional; 2-2 arity)
%            Number of functors    :    7 (   5 constant; 0-2 arity)
%            Number of variables   :    0 (   0 singleton;   0 !;   0 ?)
%            Maximal term depth    :    3 (   2 average)
% Comments : 
%------------------------------------------------------------------------------

 

% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% inv_substitution_1, axiom.
(( forall A B. ( ( A = B ) => ( inv(A) = inv(B) ) ) ))

  =>

% op_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( op(A, C) = op(B, C) ) ) ))

  =>

% op_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( op(C, A) = op(C, B) ) ) ))

  =>

% ax1_AndLHS, axiom.
(( ~ ( e0 = e1 ) ))

  =>

% ax1_AndRHS_AndLHS, axiom.
(( ~ ( e0 = e2 ) ))

  =>

% ax1_AndRHS_AndRHS_AndLHS, axiom.
(( ~ ( e0 = e3 ) ))

  =>

% ax1_AndRHS_AndRHS_AndRHS_AndLHS, axiom.
(( ~ ( e1 = e2 ) ))

  =>

% ax1_AndRHS_AndRHS_AndRHS_AndRHS_AndLHS, axiom.
(( ~ ( e1 = e3 ) ))

  =>

% ax1_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS, axiom.
(( ~ ( e2 = e3 ) ))

  =>

% ax2_AndLHS, axiom.
(( op(e0, e0) = e0 ))

  =>

% ax2_AndRHS_AndLHS, axiom.
(( op(e0, e1) = e1 ))

  =>

% ax2_AndRHS_AndRHS_AndLHS, axiom.
(( op(e0, e2) = e2 ))

  =>

% ax2_AndRHS_AndRHS_AndRHS_AndLHS, axiom.
(( op(e0, e3) = e3 ))

  =>

% ax2_AndRHS_AndRHS_AndRHS_AndRHS_AndLHS, axiom.
(( op(e1, e0) = e1 ))

  =>

% ax2_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndLHS, axiom.
(( op(e1, e1) = e3 ))

  =>

% ax2_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndLHS, axiom.
(( op(e1, e2) = e0 ))

  =>

% ax2_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndLHS, axiom.
(( op(e1, e3) = e2 ))

  =>

% ax2_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndLHS, axiom.
(( op(e2, e0) = e2 ))

  =>

% ax2_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndLHS, axiom.
(( op(e2, e1) = e0 ))

  =>

% ax2_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndLHS, axiom.
(( op(e2, e2) = e3 ))

  =>

% ax2_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndLHS, axiom.
(( op(e2, e3) = e1 ))

  =>

% ax2_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndLHS, axiom.
(( op(e3, e0) = e3 ))

  =>

% ax2_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndLHS, axiom.
(( op(e3, e1) = e2 ))

  =>

% ax2_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndLHS, axiom.
(( op(e3, e2) = e1 ))

  =>

% ax2_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS_AndRHS, axiom.
(( op(e3, e3) = e0 ))

  =>

% ax3, axiom.
(( unit = e0 ))

  =>

% ax4_AndLHS, axiom.
(( inv(e0) = e0 ))

  =>

% ax4_AndRHS_AndLHS, axiom.
(( inv(e1) = e2 ))

  =>

% ax4_AndRHS_AndRHS_AndLHS, axiom.
(( inv(e2) = e1 ))

  =>

% ax4_AndRHS_AndRHS_AndRHS, axiom.
(( inv(e3) = e3 ))

  =>

% co1, conjecture.
(( ( ~ ( ( ( op(e0, e0) = e0 ) & ( ( op(e1, e1) = e0 ) & ( ( op(e2, e2) = e0 ) & ( op(e3, e3) = e0 ) ) ) ) | ( ( ( op(e0, e0) = e1 ) & ( ( op(e1, e1) = e1 ) & ( ( op(e2, e2) = e1 ) & ( op(e3, e3) = e1 ) ) ) ) | ( ( ( op(e0, e0) = e2 ) & ( ( op(e1, e1) = e2 ) & ( ( op(e2, e2) = e2 ) & ( op(e3, e3) = e2 ) ) ) ) | ( ( op(e0, e0) = e3 ) & ( ( op(e1, e1) = e3 ) & ( ( op(e2, e2) = e3 ) & ( op(e3, e3) = e3 ) ) ) ) ) ) ) ) & ( ( ( op(e0, e0) = e0 ) | ( ( op(e0, e0) = e1 ) | ( ( op(e0, e0) = e2 ) | ( op(e0, e0) = e3 ) ) ) ) & ( ( ( op(e0, e1) = e0 ) | ( ( op(e0, e1) = e1 ) | ( ( op(e0, e1) = e2 ) | ( op(e0, e1) = e3 ) ) ) ) & ( ( ( op(e0, e2) = e0 ) | ( ( op(e0, e2) = e1 ) | ( ( op(e0, e2) = e2 ) | ( op(e0, e2) = e3 ) ) ) ) & ( ( ( op(e0, e3) = e0 ) | ( ( op(e0, e3) = e1 ) | ( ( op(e0, e3) = e2 ) | ( op(e0, e3) = e3 ) ) ) ) & ( ( ( op(e1, e0) = e0 ) | ( ( op(e1, e0) = e1 ) | ( ( op(e1, e0) = e2 ) | ( op(e1, e0) = e3 ) ) ) ) & ( ( ( op(e1, e1) = e0 ) | ( ( op(e1, e1) = e1 ) | ( ( op(e1, e1) = e2 ) | ( op(e1, e1) = e3 ) ) ) ) & ( ( ( op(e1, e2) = e0 ) | ( ( op(e1, e2) = e1 ) | ( ( op(e1, e2) = e2 ) | ( op(e1, e2) = e3 ) ) ) ) & ( ( ( op(e1, e3) = e0 ) | ( ( op(e1, e3) = e1 ) | ( ( op(e1, e3) = e2 ) | ( op(e1, e3) = e3 ) ) ) ) & ( ( ( op(e2, e0) = e0 ) | ( ( op(e2, e0) = e1 ) | ( ( op(e2, e0) = e2 ) | ( op(e2, e0) = e3 ) ) ) ) & ( ( ( op(e2, e1) = e0 ) | ( ( op(e2, e1) = e1 ) | ( ( op(e2, e1) = e2 ) | ( op(e2, e1) = e3 ) ) ) ) & ( ( ( op(e2, e2) = e0 ) | ( ( op(e2, e2) = e1 ) | ( ( op(e2, e2) = e2 ) | ( op(e2, e2) = e3 ) ) ) ) & ( ( ( op(e2, e3) = e0 ) | ( ( op(e2, e3) = e1 ) | ( ( op(e2, e3) = e2 ) | ( op(e2, e3) = e3 ) ) ) ) & ( ( ( op(e3, e0) = e0 ) | ( ( op(e3, e0) = e1 ) | ( ( op(e3, e0) = e2 ) | ( op(e3, e0) = e3 ) ) ) ) & ( ( ( op(e3, e1) = e0 ) | ( ( op(e3, e1) = e1 ) | ( ( op(e3, e1) = e2 ) | ( op(e3, e1) = e3 ) ) ) ) & ( ( ( op(e3, e2) = e0 ) | ( ( op(e3, e2) = e1 ) | ( ( op(e3, e2) = e2 ) | ( op(e3, e2) = e3 ) ) ) ) & ( ( ( op(e3, e3) = e0 ) | ( ( op(e3, e3) = e1 ) | ( ( op(e3, e3) = e2 ) | ( op(e3, e3) = e3 ) ) ) ) & ( ( op(op(e0, e0), e0) = op(e0, op(e0, e0)) ) & ( ( op(op(e0, e0), e1) = op(e0, op(e0, e1)) ) & ( ( op(op(e0, e0), e2) = op(e0, op(e0, e2)) ) & ( ( op(op(e0, e0), e3) = op(e0, op(e0, e3)) ) & ( ( op(op(e0, e1), e0) = op(e0, op(e1, e0)) ) & ( ( op(op(e0, e1), e1) = op(e0, op(e1, e1)) ) & ( ( op(op(e0, e1), e2) = op(e0, op(e1, e2)) ) & ( ( op(op(e0, e1), e3) = op(e0, op(e1, e3)) ) & ( ( op(op(e0, e2), e0) = op(e0, op(e2, e0)) ) & ( ( op(op(e0, e2), e1) = op(e0, op(e2, e1)) ) & ( ( op(op(e0, e2), e2) = op(e0, op(e2, e2)) ) & ( ( op(op(e0, e2), e3) = op(e0, op(e2, e3)) ) & ( ( op(op(e0, e3), e0) = op(e0, op(e3, e0)) ) & ( ( op(op(e0, e3), e1) = op(e0, op(e3, e1)) ) & ( ( op(op(e0, e3), e2) = op(e0, op(e3, e2)) ) & ( ( op(op(e0, e3), e3) = op(e0, op(e3, e3)) ) & ( ( op(op(e1, e0), e0) = op(e1, op(e0, e0)) ) & ( ( op(op(e1, e0), e1) = op(e1, op(e0, e1)) ) & ( ( op(op(e1, e0), e2) = op(e1, op(e0, e2)) ) & ( ( op(op(e1, e0), e3) = op(e1, op(e0, e3)) ) & ( ( op(op(e1, e1), e0) = op(e1, op(e1, e0)) ) & ( ( op(op(e1, e1), e1) = op(e1, op(e1, e1)) ) & ( ( op(op(e1, e1), e2) = op(e1, op(e1, e2)) ) & ( ( op(op(e1, e1), e3) = op(e1, op(e1, e3)) ) & ( ( op(op(e1, e2), e0) = op(e1, op(e2, e0)) ) & ( ( op(op(e1, e2), e1) = op(e1, op(e2, e1)) ) & ( ( op(op(e1, e2), e2) = op(e1, op(e2, e2)) ) & ( ( op(op(e1, e2), e3) = op(e1, op(e2, e3)) ) & ( ( op(op(e1, e3), e0) = op(e1, op(e3, e0)) ) & ( ( op(op(e1, e3), e1) = op(e1, op(e3, e1)) ) & ( ( op(op(e1, e3), e2) = op(e1, op(e3, e2)) ) & ( ( op(op(e1, e3), e3) = op(e1, op(e3, e3)) ) & ( ( op(op(e2, e0), e0) = op(e2, op(e0, e0)) ) & ( ( op(op(e2, e0), e1) = op(e2, op(e0, e1)) ) & ( ( op(op(e2, e0), e2) = op(e2, op(e0, e2)) ) & ( ( op(op(e2, e0), e3) = op(e2, op(e0, e3)) ) & ( ( op(op(e2, e1), e0) = op(e2, op(e1, e0)) ) & ( ( op(op(e2, e1), e1) = op(e2, op(e1, e1)) ) & ( ( op(op(e2, e1), e2) = op(e2, op(e1, e2)) ) & ( ( op(op(e2, e1), e3) = op(e2, op(e1, e3)) ) & ( ( op(op(e2, e2), e0) = op(e2, op(e2, e0)) ) & ( ( op(op(e2, e2), e1) = op(e2, op(e2, e1)) ) & ( ( op(op(e2, e2), e2) = op(e2, op(e2, e2)) ) & ( ( op(op(e2, e2), e3) = op(e2, op(e2, e3)) ) & ( ( op(op(e2, e3), e0) = op(e2, op(e3, e0)) ) & ( ( op(op(e2, e3), e1) = op(e2, op(e3, e1)) ) & ( ( op(op(e2, e3), e2) = op(e2, op(e3, e2)) ) & ( ( op(op(e2, e3), e3) = op(e2, op(e3, e3)) ) & ( ( op(op(e3, e0), e0) = op(e3, op(e0, e0)) ) & ( ( op(op(e3, e0), e1) = op(e3, op(e0, e1)) ) & ( ( op(op(e3, e0), e2) = op(e3, op(e0, e2)) ) & ( ( op(op(e3, e0), e3) = op(e3, op(e0, e3)) ) & ( ( op(op(e3, e1), e0) = op(e3, op(e1, e0)) ) & ( ( op(op(e3, e1), e1) = op(e3, op(e1, e1)) ) & ( ( op(op(e3, e1), e2) = op(e3, op(e1, e2)) ) & ( ( op(op(e3, e1), e3) = op(e3, op(e1, e3)) ) & ( ( op(op(e3, e2), e0) = op(e3, op(e2, e0)) ) & ( ( op(op(e3, e2), e1) = op(e3, op(e2, e1)) ) & ( ( op(op(e3, e2), e2) = op(e3, op(e2, e2)) ) & ( ( op(op(e3, e2), e3) = op(e3, op(e2, e3)) ) & ( ( op(op(e3, e3), e0) = op(e3, op(e3, e0)) ) & ( ( op(op(e3, e3), e1) = op(e3, op(e3, e1)) ) & ( ( op(op(e3, e3), e2) = op(e3, op(e3, e2)) ) & ( ( op(op(e3, e3), e3) = op(e3, op(e3, e3)) ) & ( ( op(unit, e0) = e0 ) & ( ( op(e0, unit) = e0 ) & ( ( op(unit, e1) = e1 ) & ( ( op(e1, unit) = e1 ) & ( ( op(unit, e2) = e2 ) & ( ( op(e2, unit) = e2 ) & ( ( op(unit, e3) = e3 ) & ( ( op(e3, unit) = e3 ) & ( ( ( unit = e0 ) | ( ( unit = e1 ) | ( ( unit = e2 ) | ( unit = e3 ) ) ) ) & ( ( op(e0, inv(e0)) = unit ) & ( ( op(inv(e0), e0) = unit ) & ( ( op(e1, inv(e1)) = unit ) & ( ( op(inv(e1), e1) = unit ) & ( ( op(e2, inv(e2)) = unit ) & ( ( op(inv(e2), e2) = unit ) & ( ( op(e3, inv(e3)) = unit ) & ( ( op(inv(e3), e3) = unit ) & ( ( ( inv(e0) = e0 ) | ( ( inv(e0) = e1 ) | ( ( inv(e0) = e2 ) | ( inv(e0) = e3 ) ) ) ) & ( ( ( inv(e1) = e0 ) | ( ( inv(e1) = e1 ) | ( ( inv(e1) = e2 ) | ( inv(e1) = e3 ) ) ) ) & ( ( ( inv(e2) = e0 ) | ( ( inv(e2) = e1 ) | ( ( inv(e2) = e2 ) | ( inv(e2) = e3 ) ) ) ) & ( ( inv(e3) = e0 ) | ( ( inv(e3) = e1 ) | ( ( inv(e3) = e2 ) | ( inv(e3) = e3 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ))

 

%------------------------------------------------------------------------------
