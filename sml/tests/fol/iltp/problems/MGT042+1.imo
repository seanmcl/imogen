% File     : MGT042+1 : ILTP v1.1.2
% Domain   : Management (Organisation Theory)
% Problem  : Conditions for a lower hazard of mortality
% Version  : [Han98] axioms.
% English  : When an organization lacks immunity, increased collective
%            knowledge and superior external ties lower its hazard of
%            mortality when internal friction does not increase.
% Refs     : [Kam00] Kamps (2000), Email to G. Sutcliffe
%            [CH00]  Carroll & Hannan (2000), The Demography of Corporation
%            [Han98] Hannan (1998), Rethinking Age Dependence in Organizati
% Source   : [Kam00]
% Names    : LEMMA 1 [Han98]
% Status   : Theorem
% Rating   : 0.64 v3.1.0, 0.78 v2.7.0, 0.67 v2.6.0, 0.83 v2.4.0
%
% Status (intuit.) : Open
% Rating (intuit.) : 1.00 v1.0.0
%
% Syntax   : Number of formulae    :   10 (   0 unit)
%            Number of atoms       :   54 (  11 equality)
%            Maximal formula depth :    9 (   6 average)
%            Number of connectives :   49 (   5 ~  ;   4  |;  22  &)
%                                         (   3 <=>;  15 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :    7 (   0 propositional; 1-2 arity)
%            Number of functors    :    6 (   0 constant; 2-2 arity)
%            Number of variables   :   25 (   0 singleton;  25 !;   0 ?)
%            Maximal term depth    :    2 (   2 average)
% Comments : The original text uses mnemonic names:
%            Original:    C/F/P:  Arity:    New name:
%            zero-symbol  c       0         zero
%            eta-symbol   c       0         eta
%            sigma-symbol c       0         sigma
%            tau-symbol   c       0         tau
%            very_low     c       0         very_low
%            low          c       0         low
%            mod1         c       0         mod1
%            mod2         c       0         mod2
%            high         c       0         high
%            A            f       2         age  
%            H            f       2         hazard_of_mortality  
%            C            f       2         capability  
%            P            f       2         position  
%            K            f       2         stock_of_knowledge  
%            T            f       2         external_ties  
%            F            f       2         internal_friction  
%            O            p       1         organization  
%            EN           p       1         has_endowment  
%            IM           p       2         has_immunity  
%            DS           p       3         dissimilar  
%            AL           p       2         is_aligned  
%            PA           p       2         positional_advantage  
%            FG           p       1         fragile_position  
%            RB           p       1         robust_position  
%------------------------------------------------------------------------------

 

% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% capability_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( capability(A, C) = capability(B, C) ) ) ))

  =>

% capability_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( capability(C, A) = capability(C, B) ) ) ))

  =>

% external_ties_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( external_ties(A, C) = external_ties(B, C) ) ) ))

  =>

% external_ties_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( external_ties(C, A) = external_ties(C, B) ) ) ))

  =>

% hazard_of_mortality_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( hazard_of_mortality(A, C) = hazard_of_mortality(B, C) ) ) ))

  =>

% hazard_of_mortality_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( hazard_of_mortality(C, A) = hazard_of_mortality(C, B) ) ) ))

  =>

% internal_friction_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( internal_friction(A, C) = internal_friction(B, C) ) ) ))

  =>

% internal_friction_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( internal_friction(C, A) = internal_friction(C, B) ) ) ))

  =>

% position_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( position(A, C) = position(B, C) ) ) ))

  =>

% position_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( position(C, A) = position(C, B) ) ) ))

  =>

% stock_of_knowledge_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( stock_of_knowledge(A, C) = stock_of_knowledge(B, C) ) ) ))

  =>

% stock_of_knowledge_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( stock_of_knowledge(C, A) = stock_of_knowledge(C, B) ) ) ))

  =>

% greater_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & greater(A, C) ) => greater(B, C) ) ))

  =>

% greater_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & greater(C, A) ) => greater(C, B) ) ))

  =>

% greater_or_equal_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & greater_or_equal(A, C) ) => greater_or_equal(B, C) ) ))

  =>

% greater_or_equal_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & greater_or_equal(C, A) ) => greater_or_equal(C, B) ) ))

  =>

% has_immunity_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & has_immunity(A, C) ) => has_immunity(B, C) ) ))

  =>

% has_immunity_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & has_immunity(C, A) ) => has_immunity(C, B) ) ))

  =>

% organization_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & organization(A) ) => organization(B) ) ))

  =>

% smaller_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & smaller(A, C) ) => smaller(B, C) ) ))

  =>

% smaller_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & smaller(C, A) ) => smaller(C, B) ) ))

  =>

% smaller_or_equal_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & smaller_or_equal(A, C) ) => smaller_or_equal(B, C) ) ))

  =>

% smaller_or_equal_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & smaller_or_equal(C, A) ) => smaller_or_equal(C, B) ) ))

  =>

% definition_smaller_or_equal, axiom.
(( forall X Y. ( smaller_or_equal(X, Y) <=> ( smaller(X, Y) | ( X = Y ) ) ) ))

  =>

% definition_greater_or_equal, axiom.
(( forall X Y. ( greater_or_equal(X, Y) <=> ( greater(X, Y) | ( X = Y ) ) ) ))

  =>

% definition_smaller, axiom.
(( forall X Y. ( smaller(X, Y) <=> greater(Y, X) ) ))

  =>

% meaning_postulate_greater_strict, axiom.
(( forall X Y. ( ~ ( greater(X, Y) & greater(Y, X) ) ) ))

  =>

% meaning_postulate_greater_transitive, axiom.
(( forall X Y Z. ( ( greater(X, Y) & greater(Y, Z) ) => greater(X, Z) ) ))

  =>

% meaning_postulate_greater_comparable, axiom.
(( forall X Y. ( smaller(X, Y) | ( ( X = Y ) | greater(X, Y) ) ) ))

  =>

% assumption_4, axiom.
(( forall X T0 T. ( ( organization(X) & ( ( ~ has_immunity(X, T0) ) & ( ~ has_immunity(X, T) ) ) ) => ( ( ( greater(capability(X, T), capability(X, T0)) & greater_or_equal(position(X, T), position(X, T0)) ) => smaller(hazard_of_mortality(X, T), hazard_of_mortality(X, T0)) ) & ( ( ( greater_or_equal(capability(X, T), capability(X, T0)) & greater(position(X, T), position(X, T0)) ) => smaller(hazard_of_mortality(X, T), hazard_of_mortality(X, T0)) ) & ( ( ( capability(X, T) = capability(X, T0) ) & ( position(X, T) = position(X, T0) ) ) => ( hazard_of_mortality(X, T) = hazard_of_mortality(X, T0) ) ) ) ) ) ))

  =>

% assumption_5, axiom.
(( forall X T0 T. ( organization(X) => ( ( ( greater(stock_of_knowledge(X, T), stock_of_knowledge(X, T0)) & smaller_or_equal(internal_friction(X, T), internal_friction(X, T0)) ) => greater(capability(X, T), capability(X, T0)) ) & ( ( ( smaller_or_equal(stock_of_knowledge(X, T), stock_of_knowledge(X, T0)) & greater(internal_friction(X, T), internal_friction(X, T0)) ) => smaller(capability(X, T), capability(X, T0)) ) & ( ( ( stock_of_knowledge(X, T) = stock_of_knowledge(X, T0) ) & ( internal_friction(X, T) = internal_friction(X, T0) ) ) => ( capability(X, T) = capability(X, T0) ) ) ) ) ) ))

  =>

% assumption_6, axiom.
(( forall X T0 T. ( organization(X) => ( ( greater(external_ties(X, T), external_ties(X, T0)) => greater(position(X, T), position(X, T0)) ) & ( ( external_ties(X, T) = external_ties(X, T0) ) => ( position(X, T) = position(X, T0) ) ) ) ) ))

  =>

% lemma_1, conjecture.
(( forall X T0 T. ( ( organization(X) & ( ( ~ has_immunity(X, T0) ) & ( ~ has_immunity(X, T) ) ) ) => ( ( ( greater(stock_of_knowledge(X, T), stock_of_knowledge(X, T0)) & ( smaller_or_equal(internal_friction(X, T), internal_friction(X, T0)) & greater_or_equal(external_ties(X, T), external_ties(X, T0)) ) ) => smaller(hazard_of_mortality(X, T), hazard_of_mortality(X, T0)) ) & ( ( greater_or_equal(stock_of_knowledge(X, T), stock_of_knowledge(X, T0)) & ( smaller_or_equal(internal_friction(X, T), internal_friction(X, T0)) & greater(external_ties(X, T), external_ties(X, T0)) ) ) => smaller(hazard_of_mortality(X, T), hazard_of_mortality(X, T0)) ) ) ) ))

 

%------------------------------------------------------------------------------
