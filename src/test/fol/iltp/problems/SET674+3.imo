% File     : SET674+3 : ILTP v1.1.2
% Domain   : Set Theory (Relations)
% Problem  : R (X to Y) o X is the range R & R^-1(Y) is the domain of R
% Version  : [Wor89] axioms : Reduced > Incomplete.
% English  : A relation R from X to Y composed with X is the range of R; and 
%            the inverse of R applied to Y is the domain of R.
% Refs     : [ILF] The ILF Group (1998), The ILF System: A Tool for the Int
%          : [Wor89] Woronowicz (1989), Relations Defined on Sets
% Source   : [ILF]
% Names    : RELSET_1 (38) [Wor89]
% Status   : Theorem
% Rating   : 1.00 v3.1.0, 0.89 v2.7.0, 1.00 v2.2.1
%
% Status (intuit.) : Open
% Rating (intuit.) : 1.00 v1.0.0
%
% Syntax   : Number of formulae    :   41 (   2 unit)
%            Number of atoms       :  176 (  10 equality)
%            Maximal formula depth :   13 (   7 average)
%            Number of connectives :  139 (   4 ~  ;   0  |;  18  &)
%                                         (  15 <=>; 102 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :    6 (   0 propositional; 1-2 arity)
%            Number of functors    :   16 (   2 constant; 0-4 arity)
%            Number of variables   :  107 (   0 singleton;  97 !;  10 ?)
%            Maximal term depth    :    3 (   1 average)
% Comments :
%------------------------------------------------------------------------------

 

% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% cross_product_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( cross_product(A, C) = cross_product(B, C) ) ) ))

  =>

% cross_product_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( cross_product(C, A) = cross_product(C, B) ) ) ))

  =>

% domain_substitution_1, axiom.
(( forall A B C D. ( ( A = B ) => ( domain(A, C, D) = domain(B, C, D) ) ) ))

  =>

% domain_substitution_2, axiom.
(( forall A B C D. ( ( A = B ) => ( domain(C, A, D) = domain(C, B, D) ) ) ))

  =>

% domain_substitution_3, axiom.
(( forall A B C D. ( ( A = B ) => ( domain(C, D, A) = domain(C, D, B) ) ) ))

  =>

% domain_of_substitution_1, axiom.
(( forall A B. ( ( A = B ) => ( domain_of(A) = domain_of(B) ) ) ))

  =>

% image_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( image(A, C) = image(B, C) ) ) ))

  =>

% image_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( image(C, A) = image(C, B) ) ) ))

  =>

% image4_substitution_1, axiom.
(( forall A B C D E. ( ( A = B ) => ( image4(A, C, D, E) = image4(B, C, D, E) ) ) ))

  =>

% image4_substitution_2, axiom.
(( forall A B C D E. ( ( A = B ) => ( image4(C, A, D, E) = image4(C, B, D, E) ) ) ))

  =>

% image4_substitution_3, axiom.
(( forall A B C D E. ( ( A = B ) => ( image4(C, D, A, E) = image4(C, D, B, E) ) ) ))

  =>

% image4_substitution_4, axiom.
(( forall A B C D E. ( ( A = B ) => ( image4(C, D, E, A) = image4(C, D, E, B) ) ) ))

  =>

% inverse2_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( inverse2(A, C) = inverse2(B, C) ) ) ))

  =>

% inverse2_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( inverse2(C, A) = inverse2(C, B) ) ) ))

  =>

% inverse4_substitution_1, axiom.
(( forall A B C D E. ( ( A = B ) => ( inverse4(A, C, D, E) = inverse4(B, C, D, E) ) ) ))

  =>

% inverse4_substitution_2, axiom.
(( forall A B C D E. ( ( A = B ) => ( inverse4(C, A, D, E) = inverse4(C, B, D, E) ) ) ))

  =>

% inverse4_substitution_3, axiom.
(( forall A B C D E. ( ( A = B ) => ( inverse4(C, D, A, E) = inverse4(C, D, B, E) ) ) ))

  =>

% inverse4_substitution_4, axiom.
(( forall A B C D E. ( ( A = B ) => ( inverse4(C, D, E, A) = inverse4(C, D, E, B) ) ) ))

  =>

% member_type_substitution_1, axiom.
(( forall A B. ( ( A = B ) => ( member_type(A) = member_type(B) ) ) ))

  =>

% ordered_pair_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( ordered_pair(A, C) = ordered_pair(B, C) ) ) ))

  =>

% ordered_pair_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( ordered_pair(C, A) = ordered_pair(C, B) ) ) ))

  =>

% power_set_substitution_1, axiom.
(( forall A B. ( ( A = B ) => ( power_set(A) = power_set(B) ) ) ))

  =>

% range_substitution_1, axiom.
(( forall A B C D. ( ( A = B ) => ( range(A, C, D) = range(B, C, D) ) ) ))

  =>

% range_substitution_2, axiom.
(( forall A B C D. ( ( A = B ) => ( range(C, A, D) = range(C, B, D) ) ) ))

  =>

% range_substitution_3, axiom.
(( forall A B C D. ( ( A = B ) => ( range(C, D, A) = range(C, D, B) ) ) ))

  =>

% range_of_substitution_1, axiom.
(( forall A B. ( ( A = B ) => ( range_of(A) = range_of(B) ) ) ))

  =>

% relation_type_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( relation_type(A, C) = relation_type(B, C) ) ) ))

  =>

% relation_type_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( relation_type(C, A) = relation_type(C, B) ) ) ))

  =>

% subset_type_substitution_1, axiom.
(( forall A B. ( ( A = B ) => ( subset_type(A) = subset_type(B) ) ) ))

  =>

% empty_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & empty(A) ) => empty(B) ) ))

  =>

% ilf_type_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & ilf_type(A, C) ) => ilf_type(B, C) ) ))

  =>

% ilf_type_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & ilf_type(C, A) ) => ilf_type(C, B) ) ))

  =>

% member_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & member(A, C) ) => member(B, C) ) ))

  =>

% member_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & member(C, A) ) => member(C, B) ) ))

  =>

% relation_like_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & relation_like(A) ) => relation_like(B) ) ))

  =>

% subset_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & subset(A, C) ) => subset(B, C) ) ))

  =>

% subset_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & subset(C, A) ) => subset(C, B) ) ))

  =>

% p1, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, binary_relation_type) => ( member(B, domain_of(C)) <=> ( exists D. ( ilf_type(D, set_type) & member(ordered_pair(B, D), C) ) ) ) ) ) ) ))

  =>

% p2, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, binary_relation_type) => ( member(B, range_of(C)) <=> ( exists D. ( ilf_type(D, set_type) & member(ordered_pair(D, B), C) ) ) ) ) ) ) ))

  =>

% p3, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( forall D. ( ilf_type(D, binary_relation_type) => ( member(ordered_pair(B, C), D) => ( member(B, domain_of(D)) & member(C, range_of(D)) ) ) ) ) ) ) ) ))

  =>

% p4, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( forall D. ( ilf_type(D, binary_relation_type) => ( member(C, image(D, B)) <=> ( exists E. ( ilf_type(E, set_type) & ( member(ordered_pair(E, C), D) & member(E, B) ) ) ) ) ) ) ) ) ) ))

  =>

% p5, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( forall D. ( ilf_type(D, binary_relation_type) => ( member(C, inverse2(D, B)) <=> ( exists E. ( ilf_type(E, set_type) & ( member(ordered_pair(C, E), D) & member(E, B) ) ) ) ) ) ) ) ) ) ))

  =>

% p6, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( ( forall D. ( ilf_type(D, set_type) => ( member(D, B) <=> member(D, C) ) ) ) => ( B = C ) ) ) ) ) ))

  =>

% p7, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( forall D. ( ilf_type(D, set_type) => ( forall E. ( ilf_type(E, set_type) => ( forall F. ( ilf_type(F, relation_type(B, C)) => ( member(ordered_pair(D, E), F) => ( member(D, B) & member(E, C) ) ) ) ) ) ) ) ) ) ) ) ))

  =>

% p8, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( ( forall D. ( ilf_type(D, subset_type(cross_product(B, C))) => ilf_type(D, relation_type(B, C)) ) ) & ( forall E. ( ilf_type(E, relation_type(B, C)) => ilf_type(E, subset_type(cross_product(B, C))) ) ) ) ) ) ) ))

  =>

% p9, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( exists D. ilf_type(D, relation_type(C, B)) ) ) ) ) ))

  =>

% p10, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( ( B = C ) <=> ( subset(B, C) & subset(C, B) ) ) ) ) ) ))

  =>

% p11, axiom.
(( forall B. ( ilf_type(B, binary_relation_type) => ( forall C. ( ilf_type(C, set_type) => ilf_type(inverse2(B, C), set_type) ) ) ) ))

  =>

% p12, axiom.
(( forall B. ( ilf_type(B, binary_relation_type) => ilf_type(domain_of(B), set_type) ) ))

  =>

% p13, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ilf_type(cross_product(B, C), set_type) ) ) ) ))

  =>

% p14, axiom.
(( forall B. ( ilf_type(B, binary_relation_type) => ilf_type(range_of(B), set_type) ) ))

  =>

% p15, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ilf_type(ordered_pair(B, C), set_type) ) ) ) ))

  =>

% p16, axiom.
(( forall B. ( ilf_type(B, binary_relation_type) => ( forall C. ( ilf_type(C, set_type) => ilf_type(image(B, C), set_type) ) ) ) ))

  =>

% p17, axiom.
(( forall B. ( ilf_type(B, set_type) => ( ilf_type(B, binary_relation_type) <=> ( relation_like(B) & ilf_type(B, set_type) ) ) ) ))

  =>

% p18, axiom.
(( exists B. ilf_type(B, binary_relation_type) ))

  =>

% p19, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( ilf_type(C, subset_type(B)) <=> ilf_type(C, member_type(power_set(B))) ) ) ) ) ))

  =>

% p20, axiom.
(( forall B. ( ilf_type(B, set_type) => ( exists C. ilf_type(C, subset_type(B)) ) ) ))

  =>

% p21, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( ( B = C ) <=> ( forall D. ( ilf_type(D, set_type) => ( member(D, B) <=> member(D, C) ) ) ) ) ) ) ) ))

  =>

% p22, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( subset(B, C) <=> ( forall D. ( ilf_type(D, set_type) => ( member(D, B) => member(D, C) ) ) ) ) ) ) ) ))

  =>

% p23, axiom.
(( forall B. ( ilf_type(B, set_type) => subset(B, B) ) ))

  =>

% p24, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( member(B, power_set(C)) <=> ( forall D. ( ilf_type(D, set_type) => ( member(D, B) => member(D, C) ) ) ) ) ) ) ) ))

  =>

% p25, axiom.
(( forall B. ( ilf_type(B, set_type) => ( ( ~ empty(power_set(B)) ) & ilf_type(power_set(B), set_type) ) ) ))

  =>

% p26, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ( ( ~ empty(C) ) & ilf_type(C, set_type) ) => ( ilf_type(B, member_type(C)) <=> member(B, C) ) ) ) ) ))

  =>

% p27, axiom.
(( forall B. ( ( ( ~ empty(B) ) & ilf_type(B, set_type) ) => ( exists C. ilf_type(C, member_type(B)) ) ) ))

  =>

% p28, axiom.
(( forall B. ( ilf_type(B, set_type) => ( relation_like(B) <=> ( forall C. ( ilf_type(C, set_type) => ( member(C, B) => ( exists D. ( ilf_type(D, set_type) & ( exists E. ( ilf_type(E, set_type) & ( C = ordered_pair(D, E) ) ) ) ) ) ) ) ) ) ) ))

  =>

% p29, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( forall D. ( ilf_type(D, subset_type(cross_product(B, C))) => relation_like(D) ) ) ) ) ) ))

  =>

% p30, axiom.
(( forall B. ( ilf_type(B, set_type) => ( empty(B) <=> ( forall C. ( ilf_type(C, set_type) => ( ~ member(C, B) ) ) ) ) ) ))

  =>

% p31, axiom.
(( forall B. ( ( empty(B) & ilf_type(B, set_type) ) => relation_like(B) ) ))

  =>

% p32, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( forall D. ( ilf_type(D, relation_type(B, C)) => ( domain(B, C, D) = domain_of(D) ) ) ) ) ) ) ))

  =>

% p33, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( forall D. ( ilf_type(D, relation_type(B, C)) => ilf_type(domain(B, C, D), subset_type(B)) ) ) ) ) ) ))

  =>

% p34, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( forall D. ( ilf_type(D, relation_type(B, C)) => ( range(B, C, D) = range_of(D) ) ) ) ) ) ) ))

  =>

% p35, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( forall D. ( ilf_type(D, relation_type(B, C)) => ilf_type(range(B, C, D), subset_type(C)) ) ) ) ) ) ))

  =>

% p36, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( forall D. ( ilf_type(D, relation_type(B, C)) => ( forall E. ( ilf_type(E, set_type) => ( image4(B, C, D, E) = image(D, E) ) ) ) ) ) ) ) ) ))

  =>

% p37, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( forall D. ( ilf_type(D, relation_type(B, C)) => ( forall E. ( ilf_type(E, set_type) => ilf_type(image4(B, C, D, E), subset_type(C)) ) ) ) ) ) ) ) ))

  =>

% p38, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( forall D. ( ilf_type(D, relation_type(B, C)) => ( forall E. ( ilf_type(E, set_type) => ( inverse4(B, C, D, E) = inverse2(D, E) ) ) ) ) ) ) ) ) ))

  =>

% p39, axiom.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( forall D. ( ilf_type(D, relation_type(B, C)) => ( forall E. ( ilf_type(E, set_type) => ilf_type(inverse4(B, C, D, E), subset_type(B)) ) ) ) ) ) ) ) ))

  =>

% p40, axiom.
(( forall B. ilf_type(B, set_type) ))

  =>

% prove_relset_1_38, conjecture.
(( forall B. ( ilf_type(B, set_type) => ( forall C. ( ilf_type(C, set_type) => ( forall D. ( ilf_type(D, relation_type(B, C)) => ( ( image4(B, C, D, B) = range(B, C, D) ) & ( inverse4(B, C, D, C) = domain(B, C, D) ) ) ) ) ) ) ) ))

 

%------------------------------------------------------------------------------
