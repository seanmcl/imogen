% File     : NLP004+1 : ILTP v1.1.2
% Domain   : Natural Language Processing
% Problem  : "The old dirty white Chevy" problem 4
% Version  : [Bos00] axioms.
% English  : A problem generated by the DORIS [Bos00] system when parsing
%            the statement "The old dirty white Chevy barrels down a lonely
%            street in Hollywood".
% Refs     : [Bos00] Bos (2000), DORIS: Discourse Oriented Representation an
%            [Bau99] Baumgartner (1999), FTP'2000 - Problem Sets
% Source   : [Bau99]
% Names    : 
% Status   : Theorem
% Rating   : 0.33 v3.1.0, 0.67 v2.7.0, 0.33 v2.6.0, 0.00 v2.4.0
%
% Status (intuit.) : Theorem
% Rating (intuit.) : 0.75 v1.0.0
%
% Syntax   : Number of formulae    :    1 (   0 unit)
%            Number of atoms       :  124 (  12 equality)
%            Maximal formula depth :   43 (  43 average)
%            Number of connectives :  127 (   4 ~  ;   0  |; 121  &)
%                                         (   0 <=>;   2 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :   21 (   0 propositional; 1-2 arity)
%            Number of functors    :    0 (   0 constant; --- arity)
%            Number of variables   :   40 (   0 singleton;   0 !;  40 ?)
%            Maximal term depth    :    1 (   1 average)
% Comments : 
%------------------------------------------------------------------------------

 

% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% barrel_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & barrel(A, C) ) => barrel(B, C) ) ))

  =>

% barrel_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & barrel(C, A) ) => barrel(C, B) ) ))

  =>

% car_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & car(A) ) => car(B) ) ))

  =>

% chevy_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & chevy(A) ) => chevy(B) ) ))

  =>

% city_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & city(A) ) => city(B) ) ))

  =>

% dirty_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & dirty(A) ) => dirty(B) ) ))

  =>

% down_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & down(A, C) ) => down(B, C) ) ))

  =>

% down_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & down(C, A) ) => down(C, B) ) ))

  =>

% event_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & event(A) ) => event(B) ) ))

  =>

% fellow_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & fellow(A) ) => fellow(B) ) ))

  =>

% front_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & front(A) ) => front(B) ) ))

  =>

% furniture_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & furniture(A) ) => furniture(B) ) ))

  =>

% hollywood_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & hollywood(A) ) => hollywood(B) ) ))

  =>

% in_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & in(A, C) ) => in(B, C) ) ))

  =>

% in_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & in(C, A) ) => in(C, B) ) ))

  =>

% lonely_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & lonely(A) ) => lonely(B) ) ))

  =>

% man_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & man(A) ) => man(B) ) ))

  =>

% old_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & old(A) ) => old(B) ) ))

  =>

% seat_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & seat(A) ) => seat(B) ) ))

  =>

% street_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & street(A) ) => street(B) ) ))

  =>

% way_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & way(A) ) => way(B) ) ))

  =>

% white_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & white(A) ) => white(B) ) ))

  =>

% young_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & young(A) ) => young(B) ) ))

  =>

% co1, conjecture.
(( ( ( exists U V W X Y Z X1 X2 X4 X5. ( seat(U) & ( furniture(U) & ( front(U) & ( seat(V) & ( furniture(V) & ( front(V) & ( hollywood(W) & ( city(W) & ( event(X) & ( street(Y) & ( way(Y) & ( lonely(Y) & ( chevy(Z) & ( car(Z) & ( white(Z) & ( dirty(Z) & ( old(Z) & ( barrel(X, Z) & ( down(X, Y) & ( in(X, W) & ( ( ~ ( X1 = X2 ) ) & ( fellow(X1) & ( man(X1) & ( young(X1) & ( fellow(X2) & ( man(X2) & ( young(X2) & ( ( X1 = X4 ) & ( in(X4, U) & ( ( X2 = X5 ) & in(X5, V) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) => ( exists X6 X7 X8 X9 X10 X11 X12 X13 X15 X16. ( seat(X6) & ( furniture(X6) & ( front(X6) & ( seat(X7) & ( furniture(X7) & ( front(X7) & ( hollywood(X8) & ( city(X8) & ( event(X9) & ( chevy(X10) & ( car(X10) & ( white(X10) & ( dirty(X10) & ( old(X10) & ( street(X11) & ( way(X11) & ( lonely(X11) & ( barrel(X9, X10) & ( down(X9, X11) & ( in(X9, X8) & ( ( ~ ( X12 = X13 ) ) & ( fellow(X12) & ( man(X12) & ( young(X12) & ( fellow(X13) & ( man(X13) & ( young(X13) & ( ( X12 = X15 ) & ( in(X15, X6) & ( ( X13 = X16 ) & in(X16, X7) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) & ( ( exists X17 X18 X19 X20 X21 X22 X23 X24 X26 X27. ( seat(X17) & ( furniture(X17) & ( front(X17) & ( seat(X18) & ( furniture(X18) & ( front(X18) & ( hollywood(X19) & ( city(X19) & ( event(X20) & ( chevy(X21) & ( car(X21) & ( white(X21) & ( dirty(X21) & ( old(X21) & ( street(X22) & ( way(X22) & ( lonely(X22) & ( barrel(X20, X21) & ( down(X20, X22) & ( in(X20, X19) & ( ( ~ ( X23 = X24 ) ) & ( fellow(X23) & ( man(X23) & ( young(X23) & ( fellow(X24) & ( man(X24) & ( young(X24) & ( ( X23 = X26 ) & ( in(X26, X17) & ( ( X24 = X27 ) & in(X27, X18) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) => ( exists X28 X29 X30 X31 X32 X33 X34 X35 X37 X38. ( seat(X28) & ( furniture(X28) & ( front(X28) & ( seat(X29) & ( furniture(X29) & ( front(X29) & ( hollywood(X30) & ( city(X30) & ( event(X31) & ( street(X32) & ( way(X32) & ( lonely(X32) & ( chevy(X33) & ( car(X33) & ( white(X33) & ( dirty(X33) & ( old(X33) & ( barrel(X31, X33) & ( down(X31, X32) & ( in(X31, X30) & ( ( ~ ( X34 = X35 ) ) & ( fellow(X34) & ( man(X34) & ( young(X34) & ( fellow(X35) & ( man(X35) & ( young(X35) & ( ( X34 = X37 ) & ( in(X37, X28) & ( ( X35 = X38 ) & in(X38, X29) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ))

 

%------------------------------------------------------------------------------
