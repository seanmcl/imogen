% File     : SET632+3 : ILTP v1.1.2
% Domain   : Set Theory (Boolean properties)
% Problem  : If X (= Y & X (= Z & Y disjoint from Z, then X = empty set 
% Version  : [Try89] axioms : Reduced > Incomplete.
% English  : If X is a subset of Y and X is a subset of Z and Y is disjoint 
%            from Z, then X is the empty set.
% Refs     : [ILF] The ILF Group (1998), The ILF System: A Tool for the Int
%          : [Try89] Trybulec (1989), Tarski Grothendieck Set Theory
%          : [TS89]  Trybulec & Swieczkowska (1989), Boolean Properties of
% Source   : [ILF]
% Names    : BOOLE (114) [TS89] 
% Status   : Theorem
% Rating   : 0.22 v3.1.0, 0.00 v2.5.0, 0.33 v2.4.0, 0.33 v2.2.1
%
% Status (intuit.) : Open
% Rating (intuit.) : 1.00 v1.1.0, 0.75 v1.0.0
%
% Syntax   : Number of formulae    :    9 (   2 unit)
%            Number of atoms       :   21 (   2 equality)
%            Maximal formula depth :    7 (   5 average)
%            Number of connectives :   15 (   3 ~  ;   0  |;   4  &)
%                                         (   5 <=>;   3 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :    6 (   0 propositional; 1-2 arity)
%            Number of functors    :    1 (   1 constant; 0-0 arity)
%            Number of variables   :   19 (   0 singleton;  18 !;   1 ?)
%            Maximal term depth    :    1 (   1 average)
% Comments : 
%------------------------------------------------------------------------------

 

% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% disjoint_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & disjoint(A, C) ) => disjoint(B, C) ) ))

  =>

% disjoint_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & disjoint(C, A) ) => disjoint(C, B) ) ))

  =>

% empty_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & empty(A) ) => empty(B) ) ))

  =>

% intersect_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & intersect(A, C) ) => intersect(B, C) ) ))

  =>

% intersect_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & intersect(C, A) ) => intersect(C, B) ) ))

  =>

% member_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & member(A, C) ) => member(B, C) ) ))

  =>

% member_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & member(C, A) ) => member(C, B) ) ))

  =>

% subset_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & subset(A, C) ) => subset(B, C) ) ))

  =>

% subset_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & subset(C, A) ) => subset(C, B) ) ))

  =>

% subset_defn, axiom.
(( forall B C. ( subset(B, C) <=> ( forall D. ( member(D, B) => member(D, C) ) ) ) ))

  =>

% intersect_defn, axiom.
(( forall B C. ( intersect(B, C) <=> ( exists D. ( member(D, B) & member(D, C) ) ) ) ))

  =>

% empty_set_defn, axiom.
(( forall B. ( ~ member(B, empty_set) ) ))

  =>

% disjoint_defn, axiom.
(( forall B C. ( disjoint(B, C) <=> ( ~ intersect(B, C) ) ) ))

  =>

% equal_defn, axiom.
(( forall B C. ( ( B = C ) <=> ( subset(B, C) & subset(C, B) ) ) ))

  =>

% symmetry_of_intersect, axiom.
(( forall B C. ( intersect(B, C) => intersect(C, B) ) ))

  =>

% reflexivity_of_subset, axiom.
(( forall B. subset(B, B) ))

  =>

% empty_defn, axiom.
(( forall B. ( empty(B) <=> ( forall C. ( ~ member(C, B) ) ) ) ))

  =>

% prove_th114, conjecture.
(( forall B C D. ( ( subset(B, C) & ( subset(B, D) & disjoint(C, D) ) ) => ( B = empty_set ) ) ))

 

%------------------------------------------------------------------------------
