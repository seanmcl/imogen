% File     : KRS070+1 : ILTP v1.1.2
% Domain   : Knowledge Representation (Semantic Web)
% Problem  : DL Test: fact4.1
% Version  : Especial.
% English  : 
% Refs     : [Bec03] Bechhofer (2003), Email to G. Sutcliffe
%          : [TR+04] Tsarkov et al. (2004), Using Vampire to Reason with OW
% Source   : [Bec03]
% Names    : inconsistent_description-logic-Manifest004 [Bec03]
% Status   : Unsatisfiable
% Rating   : 0.00 v3.1.0
%
% Status (intuit.) : Theorem (Problem negated)
% Rating (intuit.) : 0.75 v1.1.0
%
% Syntax   : Number of formulae    :   44 (   1 unit)
%            Number of atoms       :  125 (  32 equality)
%            Maximal formula depth :    9 (   5 average)
%            Number of connectives :   84 (   3 ~  ;   0  |;  39  &)
%                                         (   2 <=>;  40 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :   18 (   0 propositional; 1-2 arity)
%            Number of functors    :    1 (   1 constant; 0-0 arity)
%            Number of variables   :  111 (   0 singleton; 108 !;   3 ?)
%            Maximal term depth    :    1 (   1 average)
% Comments : Sean Bechhofer says there are some errors in the encoding of
%            datatypes, so this problem may not be perfect. At least it's
%            still representative of the type of reasoning required for OWL.
%------------------------------------------------------------------------------

 

Â¬ (
% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% cUnsatisfiable_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & cUnsatisfiable(A) ) => cUnsatisfiable(B) ) ))

  =>

% cc1_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & cc1(A) ) => cc1(B) ) ))

  =>

% cc2_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & cc2(A) ) => cc2(B) ) ))

  =>

% cowlNothing_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & cowlNothing(A) ) => cowlNothing(B) ) ))

  =>

% cowlThing_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & cowlThing(A) ) => cowlThing(B) ) ))

  =>

% rrx_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & rrx(A, C) ) => rrx(B, C) ) ))

  =>

% rrx_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & rrx(C, A) ) => rrx(C, B) ) ))

  =>

% rrx1_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & rrx1(A, C) ) => rrx1(B, C) ) ))

  =>

% rrx1_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & rrx1(C, A) ) => rrx1(C, B) ) ))

  =>

% rrx1a_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & rrx1a(A, C) ) => rrx1a(B, C) ) ))

  =>

% rrx1a_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & rrx1a(C, A) ) => rrx1a(C, B) ) ))

  =>

% rrx2_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & rrx2(A, C) ) => rrx2(B, C) ) ))

  =>

% rrx2_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & rrx2(C, A) ) => rrx2(C, B) ) ))

  =>

% rrx2a_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & rrx2a(A, C) ) => rrx2a(B, C) ) ))

  =>

% rrx2a_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & rrx2a(C, A) ) => rrx2a(C, B) ) ))

  =>

% rrx3_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & rrx3(A, C) ) => rrx3(B, C) ) ))

  =>

% rrx3_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & rrx3(C, A) ) => rrx3(C, B) ) ))

  =>

% rrx3a_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & rrx3a(A, C) ) => rrx3a(B, C) ) ))

  =>

% rrx3a_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & rrx3a(C, A) ) => rrx3a(C, B) ) ))

  =>

% rrx4_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & rrx4(A, C) ) => rrx4(B, C) ) ))

  =>

% rrx4_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & rrx4(C, A) ) => rrx4(C, B) ) ))

  =>

% rrx4a_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & rrx4a(A, C) ) => rrx4a(B, C) ) ))

  =>

% rrx4a_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & rrx4a(C, A) ) => rrx4a(C, B) ) ))

  =>

% rrxa_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & rrxa(A, C) ) => rrxa(B, C) ) ))

  =>

% rrxa_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & rrxa(C, A) ) => rrxa(C, B) ) ))

  =>

% xsd_integer_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & xsd_integer(A) ) => xsd_integer(B) ) ))

  =>

% xsd_string_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & xsd_string(A) ) => xsd_string(B) ) ))

  =>

% axiom_0, axiom.
(( forall X. ( cowlThing(X) & ( ~ cowlNothing(X) ) ) ))

  =>

% axiom_1, axiom.
(( forall X. ( xsd_string(X) <=> ( ~ xsd_integer(X) ) ) ))

  =>

% axiom_2, axiom.
(( forall X. ( cUnsatisfiable(X) <=> ( ( exists Y. ( rrx4(X, Y) & cc2(Y) ) ) & ( ( ~ ( exists Y. ( rrx3(X, Y) & ( cc2(Y) & cc1(Y) ) ) ) ) & ( exists Y. ( rrx3(X, Y) & cc1(Y) ) ) ) ) ) ))

  =>

% axiom_3, axiom.
(( forall X Y Z. ( ( rrx(X, Y) & rrx(X, Z) ) => ( Y = Z ) ) ))

  =>

% axiom_4, axiom.
(( forall X Y Z. ( ( rrx3(X, Y) & rrx3(X, Z) ) => ( Y = Z ) ) ))

  =>

% axiom_5, axiom.
(( forall X Y Z. ( ( rrx3a(X, Y) & rrx3a(X, Z) ) => ( Y = Z ) ) ))

  =>

% axiom_6, axiom.
(( forall X Y Z. ( ( rrx4(X, Y) & rrx4(X, Z) ) => ( Y = Z ) ) ))

  =>

% axiom_7, axiom.
(( forall X Y Z. ( ( rrx4a(X, Y) & rrx4a(X, Z) ) => ( Y = Z ) ) ))

  =>

% axiom_8, axiom.
(cUnsatisfiable(i2003_11_14_17_18_32242))

  =>

% axiom_9, axiom.
(( forall X Y. ( rrx3(X, Y) => rrx(X, Y) ) ))

  =>

% axiom_10, axiom.
(( forall X Y. ( rrx3a(X, Y) => rrxa(X, Y) ) ))

  =>

% axiom_11, axiom.
(( forall X Y. ( rrx4a(X, Y) => rrxa(X, Y) ) ))

  =>

% axiom_12, axiom.
(( forall X Y. ( rrx4(X, Y) => rrx2(X, Y) ) ))

  =>

% axiom_13, axiom.
(( forall X Y. ( rrx3a(X, Y) => rrx1a(X, Y) ) ))

  =>

% axiom_14, axiom.
(( forall X Y. ( rrx4a(X, Y) => rrx2a(X, Y) ) ))

  =>

% axiom_15, axiom.
(( forall X Y. ( rrx3(X, Y) => rrx1(X, Y) ) ))

  =>

% axiom_16, axiom.
(( forall X Y. ( rrx4(X, Y) => rrx(X, Y) ) ))

)
 

%------------------------------------------------------------------------------
