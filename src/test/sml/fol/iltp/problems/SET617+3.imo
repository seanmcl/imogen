% File     : SET617+3 : ILTP v1.1.2
% Domain   : Set Theory (Boolean properties)
% Problem  : X sym\ the empty set = X and the empty set sym\ X = X
% Version  : [Try89] axioms : Reduced > Incomplete.
% English  : The symmetric difference of X and the empty set is X and the 
%            symmetric difference of the empty set and X is X.
% Refs     : [ILF] The ILF Group (1998), The ILF System: A Tool for the Int
%          : [Try89] Trybulec (1989), Tarski Grothendieck Set Theory
%          : [TS89]  Trybulec & Swieczkowska (1989), Boolean Properties of
% Source   : [ILF]
% Names    : BOOLE (92) [TS89] 
% Status   : Theorem
% Rating   : 0.27 v3.1.0, 0.22 v2.7.0, 0.17 v2.6.0, 0.14 v2.5.0, 0.12 v2.4.0, 0.25 v2.3.0, 0.33 v2.2.1
%
% Status (intuit.) : Open
% Rating (intuit.) : 1.00 v1.0.0
%
% Syntax   : Number of formulae    :   13 (   8 unit)
%            Number of atoms       :   21 (  10 equality)
%            Maximal formula depth :    6 (   3 average)
%            Number of connectives :   10 (   2 ~  ;   0  |;   2  &)
%                                         (   5 <=>;   1 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :    4 (   0 propositional; 1-2 arity)
%            Number of functors    :    4 (   1 constant; 0-2 arity)
%            Number of variables   :   22 (   0 singleton;  22 !;   0 ?)
%            Maximal term depth    :    3 (   1 average)
% Comments : 
%------------------------------------------------------------------------------

 

% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% difference_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( difference(A, C) = difference(B, C) ) ) ))

  =>

% difference_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( difference(C, A) = difference(C, B) ) ) ))

  =>

% symmetric_difference_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( symmetric_difference(A, C) = symmetric_difference(B, C) ) ) ))

  =>

% symmetric_difference_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( symmetric_difference(C, A) = symmetric_difference(C, B) ) ) ))

  =>

% union_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( union(A, C) = union(B, C) ) ) ))

  =>

% union_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( union(C, A) = union(C, B) ) ) ))

  =>

% empty_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & empty(A) ) => empty(B) ) ))

  =>

% member_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & member(A, C) ) => member(B, C) ) ))

  =>

% member_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & member(C, A) ) => member(C, B) ) ))

  =>

% subset_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & subset(A, C) ) => subset(B, C) ) ))

  =>

% subset_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & subset(C, A) ) => subset(C, B) ) ))

  =>

% symmetric_difference_defn, axiom.
(( forall B C. ( symmetric_difference(B, C) = union(difference(B, C), difference(C, B)) ) ))

  =>

% union_empty_set, axiom.
(( forall B. ( union(B, empty_set) = B ) ))

  =>

% no_difference_with_empty_set1, axiom.
(( forall B. ( difference(B, empty_set) = B ) ))

  =>

% no_difference_with_empty_set2, axiom.
(( forall B. ( difference(empty_set, B) = empty_set ) ))

  =>

% empty_set_defn, axiom.
(( forall B. ( ~ member(B, empty_set) ) ))

  =>

% equal_defn, axiom.
(( forall B C. ( ( B = C ) <=> ( subset(B, C) & subset(C, B) ) ) ))

  =>

% commutativity_of_union, axiom.
(( forall B C. ( union(B, C) = union(C, B) ) ))

  =>

% commutativity_of_symmetric_difference, axiom.
(( forall B C. ( symmetric_difference(B, C) = symmetric_difference(C, B) ) ))

  =>

% equal_member_defn, axiom.
(( forall B C. ( ( B = C ) <=> ( forall D. ( member(D, B) <=> member(D, C) ) ) ) ))

  =>

% subset_defn, axiom.
(( forall B C. ( subset(B, C) <=> ( forall D. ( member(D, B) => member(D, C) ) ) ) ))

  =>

% reflexivity_of_subset, axiom.
(( forall B. subset(B, B) ))

  =>

% empty_defn, axiom.
(( forall B. ( empty(B) <=> ( forall C. ( ~ member(C, B) ) ) ) ))

  =>

% prove_th92, conjecture.
(( forall B. ( ( symmetric_difference(B, empty_set) = B ) & ( symmetric_difference(empty_set, B) = B ) ) ))

 

%------------------------------------------------------------------------------
