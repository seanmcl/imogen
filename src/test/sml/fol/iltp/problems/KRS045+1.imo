% File     : KRS045+1 : ILTP v1.1.2
% Domain   : Knowledge Representation (Semantic Web)
% Problem  : DL Test: t2.1
% Version  : Especial.
% English  : 
% Refs     : [Bec03] Bechhofer (2003), Email to G. Sutcliffe
%          : [TR+04] Tsarkov et al. (2004), Using Vampire to Reason with OW
% Source   : [Bec03]
% Names    : consistent_description-logic-Manifest616 [Bec03]
% Status   : Satisfiable
% Rating   : 0.00 v3.1.0
%
% Status (intuit.) : Unsolved (Problem negated)
% Rating (intuit.) : 1.00 v1.1.0
%
% Syntax   : Number of formulae    :   27 (   1 unit)
%            Number of atoms       :   76 (  18 equality)
%            Maximal formula depth :    7 (   5 average)
%            Number of connectives :   52 (   3 ~  ;   0  |;  22  &)
%                                         (   4 <=>;  23 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :   13 (   0 propositional; 1-2 arity)
%            Number of functors    :    1 (   1 constant; 0-0 arity)
%            Number of variables   :   60 (   0 singleton;  56 !;   4 ?)
%            Maximal term depth    :    1 (   1 average)
% Comments : Sean Bechhofer says there are some errors in the encoding of
%            datatypes, so this problem may not be perfect. At least it's
%            still representative of the type of reasoning required for OWL.
%------------------------------------------------------------------------------

 

Â¬ (
% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% cSatisfiable_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & cSatisfiable(A) ) => cSatisfiable(B) ) ))

  =>

% cowlNothing_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & cowlNothing(A) ) => cowlNothing(B) ) ))

  =>

% cowlThing_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & cowlThing(A) ) => cowlThing(B) ) ))

  =>

% cp1_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & cp1(A) ) => cp1(B) ) ))

  =>

% cp2_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & cp2(A) ) => cp2(B) ) ))

  =>

% cp2xcomp_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & cp2xcomp(A) ) => cp2xcomp(B) ) ))

  =>

% ra_Px1_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & ra_Px1(A, C) ) => ra_Px1(B, C) ) ))

  =>

% ra_Px1_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & ra_Px1(C, A) ) => ra_Px1(C, B) ) ))

  =>

% rf1_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & rf1(A, C) ) => rf1(B, C) ) ))

  =>

% rf1_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & rf1(C, A) ) => rf1(C, B) ) ))

  =>

% rf2_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & rf2(A, C) ) => rf2(B, C) ) ))

  =>

% rf2_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & rf2(C, A) ) => rf2(C, B) ) ))

  =>

% rr_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & rr(A, C) ) => rr(B, C) ) ))

  =>

% rr_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & rr(C, A) ) => rr(C, B) ) ))

  =>

% xsd_integer_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & xsd_integer(A) ) => xsd_integer(B) ) ))

  =>

% xsd_string_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & xsd_string(A) ) => xsd_string(B) ) ))

  =>

% axiom_0, axiom.
(( forall X. ( cowlThing(X) & ( ~ cowlNothing(X) ) ) ))

  =>

% axiom_1, axiom.
(( forall X. ( xsd_string(X) <=> ( ~ xsd_integer(X) ) ) ))

  =>

% axiom_2, axiom.
(( forall X. ( cSatisfiable(X) <=> ( ( exists Y. ( rf2(X, Y) & cp2(Y) ) ) & ( exists Y. ( rf1(X, Y) & cp1(Y) ) ) ) ) ))

  =>

% axiom_3, axiom.
(( forall X. ( cp1(X) => cp2xcomp(X) ) ))

  =>

% axiom_4, axiom.
(( forall X. ( cp2(X) <=> ( ~ ( exists Y. ra_Px1(X, Y) ) ) ) ))

  =>

% axiom_5, axiom.
(( forall X. ( cp2xcomp(X) <=> ( exists Y0. ra_Px1(X, Y0) ) ) ))

  =>

% axiom_6, axiom.
(( forall X. ( cowlThing(X) => ( forall Y0 Y1. ( ( rf1(X, Y0) & rf1(X, Y1) ) => ( Y0 = Y1 ) ) ) ) ))

  =>

% axiom_7, axiom.
(( forall X. ( cowlThing(X) => ( forall Y0 Y1. ( ( rf2(X, Y0) & rf2(X, Y1) ) => ( Y0 = Y1 ) ) ) ) ))

  =>

% axiom_8, axiom.
(cSatisfiable(i2003_11_14_17_16_21280))

  =>

% axiom_9, axiom.
(( forall X Y. ( rr(X, Y) => rf1(X, Y) ) ))

  =>

% axiom_10, axiom.
(( forall X Y. ( rr(X, Y) => rf2(X, Y) ) ))

)
 

%------------------------------------------------------------------------------
