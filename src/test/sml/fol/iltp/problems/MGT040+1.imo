% File     : MGT040+1 : ILTP v1.1.2
% Domain   : Management (Organisation Theory)
% Problem  : Selection favours FMs above EPs if change is not extreme
% Version  : [PB+94] axioms : Reduced & Augmented > Complete.
% English  : Selection favors first movers above efficient producers if
%            environmental change is rapid but not extreme during the 
%            observational period. 
% Refs     : [PM93]  Peli & Masuch (1993), The Logic of Propogation Strateg
%          : [PM94]  Peli & Masuch (1994), The Logic of Propogation Strateg
%          : [Kam95] Kamps (1995), Email to G. Sutcliffe
% Source   : [Kam95]
% Names    : 
% Status   : CounterSatisfiable
% Rating   : 0.00 v3.1.0, 0.17 v2.7.0, 0.00 v2.1.0
%
% Status (intuit.) : Unsolved
% Rating (intuit.) : 1.00 v1.1.0
%
% Syntax   : Number of formulae    :   16 (   2 unit)
%            Number of atoms       :   60 (   2 equality)
%            Maximal formula depth :    9 (   5 average)
%            Number of connectives :   52 (   8 ~  ;   1  |;  24  &)
%                                         (   0 <=>;  19 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :   11 (   0 propositional; 1-3 arity)
%            Number of functors    :    6 (   3 constant; 0-2 arity)
%            Number of variables   :   22 (   0 singleton;  22 !;   0 ?)
%            Maximal term depth    :    2 (   1 average)
% Comments : 
%------------------------------------------------------------------------------

 

% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% appear_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( appear(A, C) = appear(B, C) ) ) ))

  =>

% appear_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( appear(C, A) = appear(C, B) ) ) ))

  =>

% critical_point_substitution_1, axiom.
(( forall A B. ( ( A = B ) => ( critical_point(A) = critical_point(B) ) ) ))

  =>

% end_time_substitution_1, axiom.
(( forall A B. ( ( A = B ) => ( end_time(A) = end_time(B) ) ) ))

  =>

% empty_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & empty(A) ) => empty(B) ) ))

  =>

% environment_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & environment(A) ) => environment(B) ) ))

  =>

% extreme_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & extreme(A) ) => extreme(B) ) ))

  =>

% greater_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & greater(A, C) ) => greater(B, C) ) ))

  =>

% greater_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & greater(C, A) ) => greater(C, B) ) ))

  =>

% greater_or_equal_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & greater_or_equal(A, C) ) => greater_or_equal(B, C) ) ))

  =>

% greater_or_equal_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & greater_or_equal(C, A) ) => greater_or_equal(C, B) ) ))

  =>

% in_environment_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & in_environment(A, C) ) => in_environment(B, C) ) ))

  =>

% in_environment_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & in_environment(C, A) ) => in_environment(C, B) ) ))

  =>

% observational_period_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & observational_period(A) ) => observational_period(B) ) ))

  =>

% propagation_strategy_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & propagation_strategy(A) ) => propagation_strategy(B) ) ))

  =>

% rapid_change_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & rapid_change(A) ) => rapid_change(B) ) ))

  =>

% selection_favors_substitution_1, axiom.
(( forall A B C D. ( ( ( A = B ) & selection_favors(A, C, D) ) => selection_favors(B, C, D) ) ))

  =>

% selection_favors_substitution_2, axiom.
(( forall A B C D. ( ( ( A = B ) & selection_favors(C, A, D) ) => selection_favors(C, B, D) ) ))

  =>

% selection_favors_substitution_3, axiom.
(( forall A B C D. ( ( ( A = B ) & selection_favors(C, D, A) ) => selection_favors(C, D, B) ) ))

  =>

% mp3_favoured_trategy, axiom.
(( forall P. ( ( observational_period(P) & ( propagation_strategy(first_movers) & ( propagation_strategy(efficient_producers) & ( forall E. ( ( environment(E) & in_environment(P, E) ) => selection_favors(efficient_producers, first_movers, end_time(E)) ) ) ) ) ) => selection_favors(efficient_producers, first_movers, P) ) ))

  =>

% mp5_rapid_change_is_non_critical, axiom.
(( forall P. ( ( observational_period(P) & rapid_change(P) ) => ( forall E. ( ( environment(E) & in_environment(P, E) ) => ( ~ in_environment(E, critical_point(E)) ) ) ) ) ))

  =>

% mp6_not_extreme_change_means_not_empty, axiom.
(( forall P. ( ( observational_period(P) & ( ~ extreme(P) ) ) => ( forall E. ( ( environment(E) & in_environment(P, E) ) => ( ~ empty(E) ) ) ) ) ))

  =>

% mp_organizational_sets1, axiom.
(propagation_strategy(first_movers))

  =>

% mp_organizational_sets2, axiom.
(propagation_strategy(efficient_producers))

  =>

% mp_endpoint_in_environment, axiom.
(( forall E. ( environment(E) => in_environment(E, end_time(E)) ) ))

  =>

% mp_critical_point_not_before_opening, axiom.
(( forall E. ( ( environment(E) & ( ~ in_environment(E, critical_point(E)) ) ) => greater(critical_point(E), end_time(E)) ) ))

  =>

% mp_non_empty_means_organisations, axiom.
(( forall E. ( ( environment(E) & ( ~ empty(E) ) ) => greater_or_equal(end_time(E), appear(an_organisation, E)) ) ))

  =>

% mp_appearance_before_end_holds, axiom.
(( forall E. ( ( environment(E) & greater_or_equal(end_time(E), appear(an_organisation, E)) ) => in_environment(E, appear(an_organisation, E)) ) ))

  =>

% mp_selection_favours_in_time, axiom.
(( forall E T. ( ( environment(E) & ( greater_or_equal(T, appear(efficient_producers, E)) & ( greater(critical_point(E), T) & ( in_environment(E, critical_point(E)) => selection_favors(first_movers, efficient_producers, T) ) ) ) ) => ( ( ~ in_environment(E, critical_point(E)) ) => selection_favors(first_movers, efficient_producers, end_time(E)) ) ) ))

  =>

% mp_greater_or_equal, axiom.
(( forall X Y. ( greater_or_equal(X, Y) => ( greater(X, Y) | ( X = Y ) ) ) ))

  =>

% mp_appearance_of_EP, axiom.
(( forall E T. ( ( in_environment(E, T) & ( ~ greater(appear(efficient_producers, E), T) ) ) => greater_or_equal(T, appear(efficient_producers, E)) ) ))

  =>

% t2, hypothesis.
(( forall E T. ( ( environment(E) & ( in_environment(E, T) & ( greater_or_equal(T, appear(first_movers, E)) & greater(appear(efficient_producers, E), T) ) ) ) => selection_favors(first_movers, efficient_producers, T) ) ))

  =>

% t3, hypothesis.
(( forall E T. ( ( environment(E) & ( in_environment(E, critical_point(E)) & ( greater_or_equal(T, appear(efficient_producers, E)) & greater(critical_point(E), T) ) ) ) => selection_favors(first_movers, efficient_producers, T) ) ))

  =>

% l13, hypothesis.
(( forall E. ( ( environment(E) & in_environment(E, appear(an_organisation, E)) ) => ( appear(an_organisation, E) = appear(first_movers, E) ) ) ))

  =>

% prove_t9, conjecture.
(( forall P. ( ( observational_period(P) & ( rapid_change(P) & ( ~ extreme(P) ) ) ) => selection_favors(first_movers, efficient_producers, P) ) ))

 

%------------------------------------------------------------------------------
