% File     : GEJ037+1 : ILTP v1.1.2
% Domain   : Constructive Geometry
% Problem  : Theorem 7.1
% Version  : [P95] axioms.
% English  : If the point X is incident with the line Y, and the lines
%          : Y and Z are parallel, then the line Y is equal to the parallel
%          : of Z through point X.
% Refs     : [P95] J. von Plato. The Axioms of Constructive Geometry. Annals
%                  of Pure and Applied Logic 76 (2): 169-200, 1995.
% Source   : [P95]
% Names    :
%
% Status (intuit.) : Theorem
% Rating (intuit.) : 0.75 v1.1.0
%
% Comments :
%------------------------------------------------------------------------------

 

% a1, axiom.
(( forall X. ( ~ dipt(X, X) ) ))

  =>

% a2, axiom.
(( forall X. ( ~ diln(X, X) ) ))

  =>

% ax3, axiom.
(( forall X. ( ~ con(X, X) ) ))

  =>

% ax4, axiom.
(( forall X Y Z. ( dipt(X, Y) => ( dipt(X, Z) | dipt(Y, Z) ) ) ))

  =>

% ax5, axiom.
(( forall X Y Z. ( diln(X, Y) => ( diln(X, Z) | diln(Y, Z) ) ) ))

  =>

% ax6, axiom.
(( forall X Y Z. ( con(X, Y) => ( con(X, Z) | con(Y, Z) ) ) ))

  =>

% a1, axiom.
(( forall X Y. ( dipt(X, Y) => ( ~ apt(X, ln(X, Y)) ) ) ))

  =>

% a2, axiom.
(( forall X Y. ( dipt(X, Y) => ( ~ apt(Y, ln(X, Y)) ) ) ))

  =>

% a3, axiom.
(( forall X Y. ( con(X, Y) => ( ~ apt(pt(X, Y), X) ) ) ))

  =>

% a4, axiom.
(( forall X Y. ( con(X, Y) => ( ~ apt(pt(X, Y), Y) ) ) ))

  =>

% a1, axiom.
(( forall X Y U V. ( ( dipt(X, Y) & diln(U, V) ) => ( ( apt(X, U) | apt(X, V) ) | ( apt(Y, U) | apt(Y, V) ) ) ) ))

  =>

% a1, axiom.
(( forall X Y Z. ( apt(X, Y) => ( dipt(X, Z) | apt(Z, Y) ) ) ))

  =>

% a2, axiom.
(( forall X Y Z. ( apt(X, Y) => ( diln(Y, Z) | apt(X, Z) ) ) ))

  =>

% a3, axiom.
(( forall X Y Z. ( con(X, Y) => ( diln(Y, Z) | con(X, Z) ) ) ))

  =>

% a1, axiom.
(( forall X Y. ( ~ con(par(Y, X), Y) ) ))

  =>

% a2, axiom.
(( forall X Y. ( ~ apt(X, par(Y, X)) ) ))

  =>

% a1, axiom.
(( forall X Y Z. ( diln(Y, Z) => ( ( apt(X, Y) | apt(X, Z) ) | con(Y, Z) ) ) ))

  =>

% con, conjecture.
(( forall X Y Z. ( ( ( ~ apt(X, Y) ) & ( ~ con(Y, Z) ) ) => ( ~ diln(Y, par(Z, X)) ) ) ))

 

%------------------------------------------------------------------------------
