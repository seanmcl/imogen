% File     : MGT005+1 : ILTP v1.1.2
% Domain   : Management (Organisation Theory)
% Problem  : Complexity increases the risk of death due to reorganization.
% Version  : [PB+94] axioms.
% English  : 
% Refs     : [PB+92] Peli et al. (1992), A Logical Approach to Formalizing
%          : [PB+94] Peli et al. (1994), A Logical Approach to Formalizing 
%          : [Kam94] Kamps (1994), Email to G. Sutcliffe
% Source   : [Kam94]
% Names    : THEOREM 5 [PB+92]
% Status   : Theorem
% Rating   : 0.33 v3.1.0, 0.50 v2.7.0, 0.33 v2.4.0, 0.33 v2.2.1, 0.50 v2.1.0
%
% Status (intuit.) : Open
% Rating (intuit.) : 1.00 v1.0.0
%
% Syntax   : Number of formulae    :   11 (   0 unit)
%            Number of atoms       :   83 (   2 equality)
%            Maximal formula depth :   31 (  13 average)
%            Number of connectives :   76 (   4 ~  ;   1  |;  62  &)
%                                         (   0 <=>;   9 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :    9 (   0 propositional; 2-3 arity)
%            Number of functors    :    0 (   0 constant; --- arity)
%            Number of variables   :   62 (   0 singleton;  61 !;   1 ?)
%            Maximal term depth    :    1 (   1 average)
% Comments : mp11, mp12 and mp13 corrospond to mp10, mp11 and mp12
%            respectively from [PB+92]
%------------------------------------------------------------------------------

 

% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% class_substitution_1, axiom.
(( forall A B C D. ( ( ( A = B ) & class(A, C, D) ) => class(B, C, D) ) ))

  =>

% class_substitution_2, axiom.
(( forall A B C D. ( ( ( A = B ) & class(C, A, D) ) => class(C, B, D) ) ))

  =>

% class_substitution_3, axiom.
(( forall A B C D. ( ( ( A = B ) & class(C, D, A) ) => class(C, D, B) ) ))

  =>

% complexity_substitution_1, axiom.
(( forall A B C D. ( ( ( A = B ) & complexity(A, C, D) ) => complexity(B, C, D) ) ))

  =>

% complexity_substitution_2, axiom.
(( forall A B C D. ( ( ( A = B ) & complexity(C, A, D) ) => complexity(C, B, D) ) ))

  =>

% complexity_substitution_3, axiom.
(( forall A B C D. ( ( ( A = B ) & complexity(C, D, A) ) => complexity(C, D, B) ) ))

  =>

% greater_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & greater(A, C) ) => greater(B, C) ) ))

  =>

% greater_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & greater(C, A) ) => greater(C, B) ) ))

  =>

% organization_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & organization(A, C) ) => organization(B, C) ) ))

  =>

% organization_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & organization(C, A) ) => organization(C, B) ) ))

  =>

% reorganization_substitution_1, axiom.
(( forall A B C D. ( ( ( A = B ) & reorganization(A, C, D) ) => reorganization(B, C, D) ) ))

  =>

% reorganization_substitution_2, axiom.
(( forall A B C D. ( ( ( A = B ) & reorganization(C, A, D) ) => reorganization(C, B, D) ) ))

  =>

% reorganization_substitution_3, axiom.
(( forall A B C D. ( ( ( A = B ) & reorganization(C, D, A) ) => reorganization(C, D, B) ) ))

  =>

% reorganization_free_substitution_1, axiom.
(( forall A B C D. ( ( ( A = B ) & reorganization_free(A, C, D) ) => reorganization_free(B, C, D) ) ))

  =>

% reorganization_free_substitution_2, axiom.
(( forall A B C D. ( ( ( A = B ) & reorganization_free(C, A, D) ) => reorganization_free(C, B, D) ) ))

  =>

% reorganization_free_substitution_3, axiom.
(( forall A B C D. ( ( ( A = B ) & reorganization_free(C, D, A) ) => reorganization_free(C, D, B) ) ))

  =>

% reorganization_type_substitution_1, axiom.
(( forall A B C D. ( ( ( A = B ) & reorganization_type(A, C, D) ) => reorganization_type(B, C, D) ) ))

  =>

% reorganization_type_substitution_2, axiom.
(( forall A B C D. ( ( ( A = B ) & reorganization_type(C, A, D) ) => reorganization_type(C, B, D) ) ))

  =>

% reorganization_type_substitution_3, axiom.
(( forall A B C D. ( ( ( A = B ) & reorganization_type(C, D, A) ) => reorganization_type(C, D, B) ) ))

  =>

% survival_chance_substitution_1, axiom.
(( forall A B C D. ( ( ( A = B ) & survival_chance(A, C, D) ) => survival_chance(B, C, D) ) ))

  =>

% survival_chance_substitution_2, axiom.
(( forall A B C D. ( ( ( A = B ) & survival_chance(C, A, D) ) => survival_chance(C, B, D) ) ))

  =>

% survival_chance_substitution_3, axiom.
(( forall A B C D. ( ( ( A = B ) & survival_chance(C, D, A) ) => survival_chance(C, D, B) ) ))

  =>

% mp6_1, axiom.
(( forall X Y. ( ~ ( greater(X, Y) & ( X = Y ) ) ) ))

  =>

% mp6_2, axiom.
(( forall X Y. ( ~ ( greater(X, Y) & greater(Y, X) ) ) ))

  =>

% mp11, axiom.
(( forall X Y Z. ( ( greater(X, Y) & greater(Y, Z) ) => greater(X, Z) ) ))

  =>

% mp12, axiom.
(( forall X T. ( organization(X, T) => ( exists P. survival_chance(X, P, T) ) ) ))

  =>

% mp13, axiom.
(( forall X T T1 T2. ( ( organization(X, T1) & ( organization(X, T2) & ( greater(T, T1) & greater(T2, T) ) ) ) => organization(X, T) ) ))

  =>

% mp7, axiom.
(( forall X Ta Tb. ( reorganization(X, Ta, Tb) => greater(Tb, Ta) ) ))

  =>

% t3_FOL, hypothesis.
(( forall X P1 P2 T1 T2. ( ( organization(X, T1) & ( organization(X, T2) & ( reorganization_free(X, T1, T2) & ( survival_chance(X, P1, T1) & ( survival_chance(X, P2, T2) & greater(T2, T1) ) ) ) ) ) => greater(P2, P1) ) ))

  =>

% t4_FOL, hypothesis.
(( forall X P1 P2 T1 T2 Ta Tb. ( ( organization(X, T1) & ( organization(X, T2) & ( reorganization(X, Ta, Tb) & ( survival_chance(X, P1, T1) & ( survival_chance(X, P2, T2) & ( ( ~ greater(Ta, T1) ) & ( greater(T2, T1) & ( ~ greater(T2, Tb) ) ) ) ) ) ) ) ) => greater(P1, P2) ) ))

  =>

% a10_FOL, hypothesis.
(( forall X Y Re C C1 C2 Ta Tb Tc. ( ( organization(X, Ta) & ( organization(Y, Ta) & ( organization(Y, Tc) & ( class(X, C, Ta) & ( class(Y, C, Ta) & ( reorganization(X, Ta, Tb) & ( reorganization(Y, Ta, Tc) & ( reorganization_type(X, Re, Ta) & ( reorganization_type(Y, Re, Ta) & ( complexity(X, C1, Ta) & ( complexity(Y, C2, Ta) & greater(C2, C1) ) ) ) ) ) ) ) ) ) ) ) => greater(Tc, Tb) ) ))

  =>

% a11_FOL, hypothesis.
(( forall X Y Re C P P1 P2 C1 C2 Ta Tb Tc. ( ( organization(X, Ta) & ( organization(Y, Ta) & ( organization(X, Tb) & ( organization(Y, Tb) & ( class(X, C, Ta) & ( class(Y, C, Ta) & ( survival_chance(X, P, Ta) & ( survival_chance(Y, P, Ta) & ( reorganization(X, Ta, Tb) & ( reorganization(Y, Ta, Tc) & ( reorganization_type(X, Re, Ta) & ( reorganization_type(Y, Re, Ta) & ( survival_chance(X, P1, Tb) & ( survival_chance(Y, P2, Tb) & ( complexity(X, C1, Ta) & ( complexity(Y, C2, Ta) & greater(C2, C1) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) => ( greater(P1, P2) | ( P1 = P2 ) ) ) ))

  =>

% t5_FOL, conjecture.
(( forall X Y Re C P P1 P2 C1 C2 Ta Tb Tc. ( ( organization(X, Ta) & ( organization(Y, Ta) & ( organization(X, Tc) & ( organization(Y, Tc) & ( class(X, C, Ta) & ( class(Y, C, Ta) & ( survival_chance(X, P, Ta) & ( survival_chance(Y, P, Ta) & ( reorganization(X, Ta, Tb) & ( reorganization(Y, Ta, Tc) & ( reorganization_type(X, Re, Ta) & ( reorganization_type(Y, Re, Ta) & ( reorganization_free(X, Tb, Tc) & ( survival_chance(X, P1, Tc) & ( survival_chance(Y, P2, Tc) & ( complexity(X, C1, Ta) & ( complexity(Y, C2, Ta) & greater(C2, C1) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) => greater(P1, P2) ) ))

 

%------------------------------------------------------------------------------
