% File     : MGT041+2 : ILTP v1.1.2
% Domain   : Management (Organisation Theory)
% Problem  : There are non-FM and non-EP organisations
% Version  : [PM93] axioms.
% English  : There are non-first mover and non-efficient producers
%            organisations. 
% Refs     : [PM93]  Peli & Masuch (1993), The Logic of Propogation Strateg
%          : [PM94]  Peli & Masuch (1994), The Logic of Propogation Strateg
%          : [Kam95] Kamps (1995), Email to G. Sutcliffe
% Source   : [PM93]
% Names    : Theorem 10 [PM93]
% Status   : Theorem
% Rating   : 0.11 v3.1.0, 0.00 v2.5.0, 0.33 v2.4.0, 0.33 v2.2.1, 0.00 v2.1.0
%
% Status (intuit.) : Theorem
% Rating (intuit.) : 0.25 v1.0.0
%
% Syntax   : Number of formulae    :    5 (   0 unit)
%            Number of atoms       :   17 (   0 equality)
%            Maximal formula depth :    7 (   6 average)
%            Number of connectives :   16 (   4 ~  ;   0  |;  10  &)
%                                         (   0 <=>;   2 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :    6 (   0 propositional; 1-3 arity)
%            Number of functors    :    2 (   2 constant; 0-0 arity)
%            Number of variables   :   10 (   0 singleton;   6 !;   4 ?)
%            Maximal term depth    :    1 (   1 average)
% Comments : 
%------------------------------------------------------------------------------

 

% mp_not_high_and_low, axiom.
(( forall X T. ( ~ ( number_of_routines(X, T, low) & number_of_routines(X, T, high) ) ) ))

  =>

% a14, hypothesis.
(( forall X T. ( ( organisation_at_time(X, T) & ( efficient_producer(X) & founding_time(X, T) ) ) => has_elaborated_routines(X, T) ) ))

  =>

% a15, hypothesis.
(( forall X T. ( ( organisation_at_time(X, T) & ( first_mover(X) & founding_time(X, T) ) ) => number_of_routines(X, T, low) ) ))

  =>

% a16, hypothesis.
(( exists X T. ( organisation_at_time(X, T) & ( founding_time(X, T) & ( number_of_routines(X, T, high) & ( ~ has_elaborated_routines(X, T) ) ) ) ) ))

  =>

% prove_t10, conjecture.
(( exists X T. ( organisation_at_time(X, T) & ( ( ~ first_mover(X) ) & ( ~ efficient_producer(X) ) ) ) ))

 

%------------------------------------------------------------------------------
