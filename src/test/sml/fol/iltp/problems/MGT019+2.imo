% File     : MGT019+2 : ILTP v1.1.2
% Domain   : Management (Organisation Theory)
% Problem  : Growth rate of EPs exceeds that of FMs in stable environments
% Version  : [PM93] axioms.
% English  : The growth rate of efficent producers exceeds the growth rate 
%            of first movers past a certain time in stable environments.
% Refs     : [PM93]  Peli & Masuch (1993), The Logic of Propogation Strateg
%          : [PM94]  Peli & Masuch (1994), The Logic of Propogation Strateg
%          : [PB+94] Peli et al. (1994), A Logical Approach to Formalizing
% Source   : [PM93]
% Names    : LEMMA 1 [PM93]
%          : L1 [PB+94]
% Status   : CounterSatisfiable
%
% Status (intuit.) : Unsolved
% Rating (intuit.) : 1.00 v1.1.0
% Rating (intuit.) : 1.00 v1.1
%
% Syntax   : Number of formulae    :    5 (   0 unit)
%            Number of atoms       :   21 (   1 equality)
%            Maximal formula depth :    8 (   6 average)
%            Number of connectives :   17 (   1 ~  ;   1  |;   8  &)
%                                         (   0 <=>;   7 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :    7 (   0 propositional; 1-4 arity)
%            Number of functors    :    5 (   2 constant; 0-2 arity)
%            Number of variables   :   11 (   0 singleton;   9 !;   2 ?)
%            Maximal term depth    :    2 (   1 average)
% Comments : There is no MGT019+1 as Kamps did not send it to me.
%------------------------------------------------------------------------------

 

% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% disbanding_rate_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( disbanding_rate(A, C) = disbanding_rate(B, C) ) ) ))

  =>

% disbanding_rate_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( disbanding_rate(C, A) = disbanding_rate(C, B) ) ) ))

  =>

% founding_rate_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( founding_rate(A, C) = founding_rate(B, C) ) ) ))

  =>

% founding_rate_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( founding_rate(C, A) = founding_rate(C, B) ) ) ))

  =>

% growth_rate_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( growth_rate(A, C) = growth_rate(B, C) ) ) ))

  =>

% growth_rate_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( growth_rate(C, A) = growth_rate(C, B) ) ) ))

  =>

% environment_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & environment(A) ) => environment(B) ) ))

  =>

% greater_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & greater(A, C) ) => greater(B, C) ) ))

  =>

% greater_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & greater(C, A) ) => greater(C, B) ) ))

  =>

% greater_or_equal_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & greater_or_equal(A, C) ) => greater_or_equal(B, C) ) ))

  =>

% greater_or_equal_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & greater_or_equal(C, A) ) => greater_or_equal(C, B) ) ))

  =>

% in_environment_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & in_environment(A, C) ) => in_environment(B, C) ) ))

  =>

% in_environment_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & in_environment(C, A) ) => in_environment(C, B) ) ))

  =>

% stable_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & stable(A) ) => stable(B) ) ))

  =>

% subpopulations_substitution_1, axiom.
(( forall A B C D E. ( ( ( A = B ) & subpopulations(A, C, D, E) ) => subpopulations(B, C, D, E) ) ))

  =>

% subpopulations_substitution_2, axiom.
(( forall A B C D E. ( ( ( A = B ) & subpopulations(C, A, D, E) ) => subpopulations(C, B, D, E) ) ))

  =>

% subpopulations_substitution_3, axiom.
(( forall A B C D E. ( ( ( A = B ) & subpopulations(C, D, A, E) ) => subpopulations(C, D, B, E) ) ))

  =>

% subpopulations_substitution_4, axiom.
(( forall A B C D E. ( ( ( A = B ) & subpopulations(C, D, E, A) ) => subpopulations(C, D, E, B) ) ))

  =>

% l2, axiom.
(( ~ ( forall E T. ( ( environment(E) & subpopulations(first_movers, efficient_producers, E, T) ) => greater(disbanding_rate(first_movers, T), disbanding_rate(efficient_producers, T)) ) ) ))

  =>

% mp_EP_lower_disbanding_rate, axiom.
(( forall T. ( ( greater(disbanding_rate(first_movers, T), disbanding_rate(efficient_producers, T)) & greater_or_equal(founding_rate(efficient_producers, T), founding_rate(first_movers, T)) ) => greater(growth_rate(efficient_producers, T), growth_rate(first_movers, T)) ) ))

  =>

% mp_greater_or_equal, axiom.
(( forall X Y. ( greater_or_equal(X, Y) => ( greater(X, Y) | ( X = Y ) ) ) ))

  =>

% a8, hypothesis.
(( forall E. ( ( environment(E) & stable(E) ) => ( exists To. ( in_environment(E, To) & ( forall T. ( ( subpopulations(first_movers, efficient_producers, E, T) & greater_or_equal(T, To) ) => greater_or_equal(founding_rate(efficient_producers, T), founding_rate(first_movers, T)) ) ) ) ) ) ))

  =>

% prove_l1, conjecture.
(( forall E. ( ( environment(E) & stable(E) ) => ( exists To. ( in_environment(E, To) & ( forall T. ( ( subpopulations(first_movers, efficient_producers, E, T) & greater_or_equal(T, To) ) => greater(growth_rate(efficient_producers, T), growth_rate(first_movers, T)) ) ) ) ) ) ))

 

%------------------------------------------------------------------------------
