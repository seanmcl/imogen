% File     : SET624+3 : ILTP v1.1.2
% Domain   : Set Theory (Boolean properties)
% Problem  : X intersects Y U Z iff X intersects Y or X intersects Z
% Version  : [Try89] axioms : Reduced > Incomplete.
% English  : X intersects the union of Y and Z iff X intersects Y or X 
%            intersects Z.
% Refs     : [ILF] The ILF Group (1998), The ILF System: A Tool for the Int
%          : [Try89] Trybulec (1989), Tarski Grothendieck Set Theory
%          : [TS89]  Trybulec & Swieczkowska (1989), Boolean Properties of
% Source   : [ILF]
% Names    : BOOLE (100) [TS89] 
% Status   : Theorem
% Rating   : 0.64 v3.1.0, 0.67 v2.7.0, 0.50 v2.6.0, 0.43 v2.5.0, 0.50 v2.4.0, 0.50 v2.3.0, 0.33 v2.2.1
%
% Status (intuit.) : Open
% Rating (intuit.) : 1.00 v1.0.0
%
% Syntax   : Number of formulae    :    6 (   1 unit)
%            Number of atoms       :   15 (   2 equality)
%            Maximal formula depth :    6 (   5 average)
%            Number of connectives :    9 (   0 ~  ;   2  |;   1  &)
%                                         (   5 <=>;   1 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :    3 (   0 propositional; 2-2 arity)
%            Number of functors    :    1 (   0 constant; 2-2 arity)
%            Number of variables   :   16 (   0 singleton;  15 !;   1 ?)
%            Maximal term depth    :    2 (   1 average)
% Comments : 
%------------------------------------------------------------------------------

 

% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% union_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( union(A, C) = union(B, C) ) ) ))

  =>

% union_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( union(C, A) = union(C, B) ) ) ))

  =>

% intersect_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & intersect(A, C) ) => intersect(B, C) ) ))

  =>

% intersect_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & intersect(C, A) ) => intersect(C, B) ) ))

  =>

% member_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & member(A, C) ) => member(B, C) ) ))

  =>

% member_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & member(C, A) ) => member(C, B) ) ))

  =>

% union_defn, axiom.
(( forall B C D. ( member(D, union(B, C)) <=> ( member(D, B) | member(D, C) ) ) ))

  =>

% intersect_defn, axiom.
(( forall B C. ( intersect(B, C) <=> ( exists D. ( member(D, B) & member(D, C) ) ) ) ))

  =>

% commutativity_of_union, axiom.
(( forall B C. ( union(B, C) = union(C, B) ) ))

  =>

% symmetry_of_intersect, axiom.
(( forall B C. ( intersect(B, C) => intersect(C, B) ) ))

  =>

% equal_member_defn, axiom.
(( forall B C. ( ( B = C ) <=> ( forall D. ( member(D, B) <=> member(D, C) ) ) ) ))

  =>

% prove_intersect_with_union, conjecture.
(( forall B C D. ( intersect(B, union(C, D)) <=> ( intersect(B, C) | intersect(B, D) ) ) ))

 

%------------------------------------------------------------------------------
