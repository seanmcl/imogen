% File     : MGT063+1 : ILTP v1.1.2
% Domain   : Management (Organisation Theory)
% Problem  : Conditions for increasing then decreasing hazard of mortality
% Version  : [Han98] axioms.
% English  : If environmental drift destroys alignment before advantage can
%            be gained from occupancy of a robust position, then the hazard 
%            of mortality for an unendowed organization with a robust 
%            position initially increases with age, then decreases with
%            further aging and falls below the initial level.
% Refs     : [Kam00] Kamps (2000), Email to G. Sutcliffe
%            [CH00]  Carroll & Hannan (2000), The Demography of Corporation
%            [Han98] Hannan (1998), Rethinking Age Dependence in Organizati
% Source   : [Kam00]
% Names    : THEOREM 9 [Han98]
% Status   : Theorem
% Rating   : 0.55 v3.1.0, 0.67 v2.7.0, 0.50 v2.6.0, 0.83 v2.5.0, 1.00 v2.4.0
%
% Status (intuit.) : Open
% Rating (intuit.) : 1.00 v1.0.0
%
% Syntax   : Number of formulae    :   20 (   6 unit)
%            Number of atoms       :   77 (  12 equality)
%            Maximal formula depth :   17 (   5 average)
%            Number of connectives :   69 (  12 ~  ;   4  |;  29  &)
%                                         (   8 <=>;  16 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :   12 (   0 propositional; 1-3 arity)
%            Number of functors    :   11 (   9 constant; 0-2 arity)
%            Number of variables   :   34 (   0 singleton;  34 !;   0 ?)
%            Maximal term depth    :    2 (   1 average)
% Comments : See MGT042+1.p for the mnemonic names.
%------------------------------------------------------------------------------

 

% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% age_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( age(A, C) = age(B, C) ) ) ))

  =>

% age_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( age(C, A) = age(C, B) ) ) ))

  =>

% hazard_of_mortality_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( hazard_of_mortality(A, C) = hazard_of_mortality(B, C) ) ) ))

  =>

% hazard_of_mortality_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( hazard_of_mortality(C, A) = hazard_of_mortality(C, B) ) ) ))

  =>

% dissimilar_substitution_1, axiom.
(( forall A B C D. ( ( ( A = B ) & dissimilar(A, C, D) ) => dissimilar(B, C, D) ) ))

  =>

% dissimilar_substitution_2, axiom.
(( forall A B C D. ( ( ( A = B ) & dissimilar(C, A, D) ) => dissimilar(C, B, D) ) ))

  =>

% dissimilar_substitution_3, axiom.
(( forall A B C D. ( ( ( A = B ) & dissimilar(C, D, A) ) => dissimilar(C, D, B) ) ))

  =>

% greater_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & greater(A, C) ) => greater(B, C) ) ))

  =>

% greater_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & greater(C, A) ) => greater(C, B) ) ))

  =>

% greater_or_equal_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & greater_or_equal(A, C) ) => greater_or_equal(B, C) ) ))

  =>

% greater_or_equal_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & greater_or_equal(C, A) ) => greater_or_equal(C, B) ) ))

  =>

% has_endowment_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & has_endowment(A) ) => has_endowment(B) ) ))

  =>

% has_immunity_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & has_immunity(A, C) ) => has_immunity(B, C) ) ))

  =>

% has_immunity_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & has_immunity(C, A) ) => has_immunity(C, B) ) ))

  =>

% is_aligned_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & is_aligned(A, C) ) => is_aligned(B, C) ) ))

  =>

% is_aligned_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & is_aligned(C, A) ) => is_aligned(C, B) ) ))

  =>

% organization_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & organization(A) ) => organization(B) ) ))

  =>

% positional_advantage_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & positional_advantage(A, C) ) => positional_advantage(B, C) ) ))

  =>

% positional_advantage_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & positional_advantage(C, A) ) => positional_advantage(C, B) ) ))

  =>

% robust_position_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & robust_position(A) ) => robust_position(B) ) ))

  =>

% smaller_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & smaller(A, C) ) => smaller(B, C) ) ))

  =>

% smaller_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & smaller(C, A) ) => smaller(C, B) ) ))

  =>

% smaller_or_equal_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & smaller_or_equal(A, C) ) => smaller_or_equal(B, C) ) ))

  =>

% smaller_or_equal_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & smaller_or_equal(C, A) ) => smaller_or_equal(C, B) ) ))

  =>

% definition_smaller_or_equal, axiom.
(( forall X Y. ( smaller_or_equal(X, Y) <=> ( smaller(X, Y) | ( X = Y ) ) ) ))

  =>

% definition_greater_or_equal, axiom.
(( forall X Y. ( greater_or_equal(X, Y) <=> ( greater(X, Y) | ( X = Y ) ) ) ))

  =>

% definition_smaller, axiom.
(( forall X Y. ( smaller(X, Y) <=> greater(Y, X) ) ))

  =>

% meaning_postulate_greater_strict, axiom.
(( forall X Y. ( ~ ( greater(X, Y) & greater(Y, X) ) ) ))

  =>

% meaning_postulate_greater_transitive, axiom.
(( forall X Y Z. ( ( greater(X, Y) & greater(Y, Z) ) => greater(X, Z) ) ))

  =>

% meaning_postulate_greater_comparable, axiom.
(( forall X Y. ( smaller(X, Y) | ( ( X = Y ) | greater(X, Y) ) ) ))

  =>

% definition_1, axiom.
(( forall X. ( has_endowment(X) <=> ( forall T. ( organization(X) & ( ( smaller_or_equal(age(X, T), eta) => has_immunity(X, T) ) & ( greater(age(X, T), eta) => ( ~ has_immunity(X, T) ) ) ) ) ) ) ))

  =>

% assumption_1, axiom.
(( forall X T. ( ( organization(X) & ( ~ has_endowment(X) ) ) => ( ~ has_immunity(X, T) ) ) ))

  =>

% definition_2, axiom.
(( forall X T0 T. ( dissimilar(X, T0, T) <=> ( organization(X) & ( ~ ( is_aligned(X, T0) <=> is_aligned(X, T) ) ) ) ) ))

  =>

% assumption_13, axiom.
(( forall X T. ( ( organization(X) & ( age(X, T) = zero ) ) => is_aligned(X, T) ) ))

  =>

% assumption_15, axiom.
(( forall X T0 T. ( ( organization(X) & ( age(X, T0) = zero ) ) => ( greater(age(X, T), sigma) <=> dissimilar(X, T0, T) ) ) ))

  =>

% definition_4, axiom.
(( forall X. ( robust_position(X) <=> ( forall T. ( ( smaller_or_equal(age(X, T), tau) => ( ~ positional_advantage(X, T) ) ) & ( greater(age(X, T), tau) => positional_advantage(X, T) ) ) ) ) ))

  =>

% assumption_17, axiom.
(( forall X T. ( organization(X) => ( ( has_immunity(X, T) => ( hazard_of_mortality(X, T) = very_low ) ) & ( ( ~ has_immunity(X, T) ) => ( ( ( is_aligned(X, T) & positional_advantage(X, T) ) => ( hazard_of_mortality(X, T) = low ) ) & ( ( ( ( ~ is_aligned(X, T) ) & positional_advantage(X, T) ) => ( hazard_of_mortality(X, T) = mod1 ) ) & ( ( ( is_aligned(X, T) & ( ~ positional_advantage(X, T) ) ) => ( hazard_of_mortality(X, T) = mod2 ) ) & ( ( ( ~ is_aligned(X, T) ) & ( ~ positional_advantage(X, T) ) ) => ( hazard_of_mortality(X, T) = high ) ) ) ) ) ) ) ) ))

  =>

% assumption_18a, axiom.
(greater(high, mod1))

  =>

% assumption_18b, axiom.
(greater(mod1, low))

  =>

% assumption_18c, axiom.
(greater(low, very_low))

  =>

% assumption_18d, axiom.
(greater(high, mod2))

  =>

% assumption_18e, axiom.
(greater(mod2, low))

  =>

% assumption_19, axiom.
(greater(mod2, mod1))

  =>

% theorem_9, conjecture.
(( forall X T0 T1 T2 T3. ( ( organization(X) & ( robust_position(X) & ( ( ~ has_endowment(X) ) & ( ( age(X, T0) = zero ) & ( greater(sigma, zero) & ( greater(tau, zero) & ( smaller(sigma, tau) & ( smaller_or_equal(age(X, T1), sigma) & ( greater(age(X, T2), sigma) & ( smaller_or_equal(age(X, T2), tau) & greater(age(X, T3), tau) ) ) ) ) ) ) ) ) ) ) => ( smaller(hazard_of_mortality(X, T3), hazard_of_mortality(X, T1)) & ( smaller(hazard_of_mortality(X, T1), hazard_of_mortality(X, T2)) & ( hazard_of_mortality(X, T1) = hazard_of_mortality(X, T0) ) ) ) ) ))

 

%------------------------------------------------------------------------------
