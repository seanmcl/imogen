% File     : MGT038+1 : ILTP v1.1.2
% Domain   : Management (Organisation Theory)
% Problem  : FMs become extinct in stable environments
% Version  : [PB+94] axioms : Reduced & Augmented > Complete.
% English  : First movers become extinct past a certain point in time 
%            in stable environments. 
% Refs     : [PM93]  Peli & Masuch (1993), The Logic of Propogation Strateg
%          : [PM94]  Peli & Masuch (1994), The Logic of Propogation Strateg
%          : [Kam95] Kamps (1995), Email to G. Sutcliffe
% Source   : [Kam95]
% Names    : 
% Status   : CounterSatisfiable
% Rating   : 0.00 v3.1.0, 0.17 v2.7.0, 0.00 v2.1.0
%
% Status (intuit.) : Unsolved
% Rating (intuit.) : 1.00 v1.1.0
%
% Syntax   : Number of formulae    :    8 (   1 unit)
%            Number of atoms       :   27 (   2 equality)
%            Maximal formula depth :    8 (   5 average)
%            Number of connectives :   19 (   0 ~  ;   0  |;  12  &)
%                                         (   0 <=>;   7 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :    7 (   0 propositional; 1-2 arity)
%            Number of functors    :    9 (   7 constant; 0-2 arity)
%            Number of variables   :   15 (   0 singleton;  12 !;   3 ?)
%            Maximal term depth    :    2 (   1 average)
% Comments : 
%------------------------------------------------------------------------------

 

% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% appear_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( appear(A, C) = appear(B, C) ) ) ))

  =>

% appear_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( appear(C, A) = appear(C, B) ) ) ))

  =>

% cardinality_at_time_substitution_1, axiom.
(( forall A B C. ( ( A = B ) => ( cardinality_at_time(A, C) = cardinality_at_time(B, C) ) ) ))

  =>

% cardinality_at_time_substitution_2, axiom.
(( forall A B C. ( ( A = B ) => ( cardinality_at_time(C, A) = cardinality_at_time(C, B) ) ) ))

  =>

% contracts_from_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & contracts_from(A, C) ) => contracts_from(B, C) ) ))

  =>

% contracts_from_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & contracts_from(C, A) ) => contracts_from(C, B) ) ))

  =>

% environment_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & environment(A) ) => environment(B) ) ))

  =>

% finite_set_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & finite_set(A) ) => finite_set(B) ) ))

  =>

% greater_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & greater(A, C) ) => greater(B, C) ) ))

  =>

% greater_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & greater(C, A) ) => greater(C, B) ) ))

  =>

% in_environment_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & in_environment(A, C) ) => in_environment(B, C) ) ))

  =>

% in_environment_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & in_environment(C, A) ) => in_environment(C, B) ) ))

  =>

% stable_substitution_1, axiom.
(( forall A B. ( ( ( A = B ) & stable(A) ) => stable(B) ) ))

  =>

% mp7_first_movers_exist, axiom.
(finite_set(first_movers))

  =>

% mp_stable_first_movers, axiom.
(( forall E. ( ( environment(E) & stable(E) ) => in_environment(E, appear(first_movers, E)) ) ))

  =>

% mp_contracting_time, axiom.
(( forall S To. ( ( finite_set(S) & contracts_from(To, S) ) => ( exists T2. ( greater(T2, To) & ( cardinality_at_time(s, t2) = zero ) ) ) ) ))

  =>

% mp_long_stable_environments, axiom.
(( forall E T1 T2. ( ( environment(E) & ( stable(E) & ( in_environment(E, T1) & greater(T2, T1) ) ) ) => in_environment(E, T2) ) ))

  =>

% mp_greater_transitivity, axiom.
(( forall X Y Z. ( ( greater(X, Y) & greater(Y, Z) ) => greater(X, Z) ) ))

  =>

% l9, hypothesis.
(( forall E. ( ( environment(E) & stable(E) ) => ( exists To. ( greater(To, appear(efficient_producers, E)) & contracts_from(To, first_movers) ) ) ) ))

  =>

% a13, hypothesis.
(( forall E. ( environment(E) => greater(appear(efficient_producers, e), appear(first_movers, E)) ) ))

  =>

% prove_t7, conjecture.
(( forall E. ( ( environment(E) & stable(E) ) => ( exists To. ( in_environment(E, To) & ( greater(To, appear(first_movers, E)) & ( cardinality_at_time(first_movers, to) = zero ) ) ) ) ) ))

 

%------------------------------------------------------------------------------
