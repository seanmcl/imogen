% File     : MGT012+1 : ILTP v1.1.2
% Domain   : Management (Organisation Theory)
% Problem  : Complexity of an organization cannot get smaller by age
% Version  : [PB+94] axioms.
% English  : Complexity of an organization cannot get smaller by age in
%            lack of reorganization.
% Refs     : [PB+94] Peli et al. (1994), A Logical Approach to Formalizing 
%          : [Kam94] Kamps (1994), Email to G. Sutcliffe
%          : [Kam95] Kamps (1995), Email to G. Sutcliffe
% Source   : [Kam94]
% Names    :
% Status   : Theorem
% Rating   : 0.22 v3.1.0, 0.17 v2.7.0, 0.00 v2.1.0
%
% Status (intuit.) : Open
% Rating (intuit.) : 1.00 v1.0.0
%
% Syntax   : Number of formulae    :    8 (   0 unit)
%            Number of atoms       :   38 (   2 equality)
%            Maximal formula depth :   19 (   9 average)
%            Number of connectives :   33 (   3 ~  ;   0  |;  24  &)
%                                         (   0 <=>;   6 =>;   0 <=)
%                                         (   0 <~>;   0 ~|;   0 ~&)
%            Number of predicates  :    7 (   0 propositional; 2-3 arity)
%            Number of functors    :    0 (   0 constant; --- arity)
%            Number of variables   :   34 (   0 singleton;  32 !;   2 ?)
%            Maximal term depth    :    1 (   1 average)
% Comments : "Not published due to publication constraints." [Kam95].
%------------------------------------------------------------------------------

 

% reflexivity, axiom.
(( forall X. ( X = X ) ))

  =>

% symmetry, axiom.
(( forall X Y. ( ( X = Y ) => ( Y = X ) ) ))

  =>

% transitivity, axiom.
(( forall X Y Z. ( ( ( X = Y ) & ( Y = Z ) ) => ( X = Z ) ) ))

  =>

% class_substitution_1, axiom.
(( forall A B C D. ( ( ( A = B ) & class(A, C, D) ) => class(B, C, D) ) ))

  =>

% class_substitution_2, axiom.
(( forall A B C D. ( ( ( A = B ) & class(C, A, D) ) => class(C, B, D) ) ))

  =>

% class_substitution_3, axiom.
(( forall A B C D. ( ( ( A = B ) & class(C, D, A) ) => class(C, D, B) ) ))

  =>

% complexity_substitution_1, axiom.
(( forall A B C D. ( ( ( A = B ) & complexity(A, C, D) ) => complexity(B, C, D) ) ))

  =>

% complexity_substitution_2, axiom.
(( forall A B C D. ( ( ( A = B ) & complexity(C, A, D) ) => complexity(C, B, D) ) ))

  =>

% complexity_substitution_3, axiom.
(( forall A B C D. ( ( ( A = B ) & complexity(C, D, A) ) => complexity(C, D, B) ) ))

  =>

% greater_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & greater(A, C) ) => greater(B, C) ) ))

  =>

% greater_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & greater(C, A) ) => greater(C, B) ) ))

  =>

% inertia_substitution_1, axiom.
(( forall A B C D. ( ( ( A = B ) & inertia(A, C, D) ) => inertia(B, C, D) ) ))

  =>

% inertia_substitution_2, axiom.
(( forall A B C D. ( ( ( A = B ) & inertia(C, A, D) ) => inertia(C, B, D) ) ))

  =>

% inertia_substitution_3, axiom.
(( forall A B C D. ( ( ( A = B ) & inertia(C, D, A) ) => inertia(C, D, B) ) ))

  =>

% organization_substitution_1, axiom.
(( forall A B C. ( ( ( A = B ) & organization(A, C) ) => organization(B, C) ) ))

  =>

% organization_substitution_2, axiom.
(( forall A B C. ( ( ( A = B ) & organization(C, A) ) => organization(C, B) ) ))

  =>

% reorganization_free_substitution_1, axiom.
(( forall A B C D. ( ( ( A = B ) & reorganization_free(A, C, D) ) => reorganization_free(B, C, D) ) ))

  =>

% reorganization_free_substitution_2, axiom.
(( forall A B C D. ( ( ( A = B ) & reorganization_free(C, A, D) ) => reorganization_free(C, B, D) ) ))

  =>

% reorganization_free_substitution_3, axiom.
(( forall A B C D. ( ( ( A = B ) & reorganization_free(C, D, A) ) => reorganization_free(C, D, B) ) ))

  =>

% mp5, axiom.
(( forall X T. ( organization(X, T) => ( exists I. inertia(X, I, T) ) ) ))

  =>

% mp6_1, axiom.
(( forall X Y. ( ~ ( greater(X, Y) & ( X = Y ) ) ) ))

  =>

% mp6_2, axiom.
(( forall X Y. ( ~ ( greater(X, Y) & greater(Y, X) ) ) ))

  =>

% mp9, axiom.
(( forall X T. ( organization(X, T) => ( exists C. class(X, C, T) ) ) ))

  =>

% mp10, axiom.
(( forall X T1 T2 C1 C2. ( ( organization(X, T1) & ( organization(X, T2) & ( reorganization_free(X, T1, T2) & ( class(X, C1, T1) & class(X, C2, T2) ) ) ) ) => ( C1 = C2 ) ) ))

  =>

% a12_FOL, hypothesis.
(( forall X Y C C1 C2 I1 I2 T1 T2. ( ( organization(X, T1) & ( organization(Y, T2) & ( class(X, C, T1) & ( class(Y, C, T2) & ( complexity(X, C1, T1) & ( complexity(Y, C2, T2) & ( inertia(X, I1, T1) & ( inertia(Y, I2, T2) & greater(C2, C1) ) ) ) ) ) ) ) ) => greater(I2, I1) ) ))

  =>

% t2_FOL, hypothesis.
(( forall X I1 I2 T1 T2. ( ( organization(X, T1) & ( organization(X, T2) & ( reorganization_free(X, T1, T2) & ( inertia(X, I1, T1) & ( inertia(X, I2, T2) & greater(T2, T1) ) ) ) ) ) => greater(I2, I1) ) ))

  =>

% t12_FOL, conjecture.
(( forall X C1 C2 T1 T2. ( ( organization(X, T1) & ( organization(X, T2) & ( reorganization_free(X, T1, T2) & ( complexity(X, C1, T1) & ( complexity(X, C2, T2) & greater(T2, T1) ) ) ) ) ) => ( ~ greater(C1, C2) ) ) ))

 

%------------------------------------------------------------------------------
